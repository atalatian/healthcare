{"version":3,"sources":["components/detail/overview/overallStatistics.jsx","components/detail/overview/dayPhaseStatistics.jsx","components/detail/overview/nightPhaseStatistics.jsx","components/detail/overview/dayNightAnalysis.jsx","components/useReRender.jsx","components/useWindowSize.jsx","components/detail/singleValue/graphicalView.jsx","components/detail/overview/overviewVertical.jsx","components/detail/overview/overviewHorizontal.jsx","components/detail/singleValue/table.jsx","components/detail/singleValue/singleValueVertical.jsx","components/detail/hourlyAverages/graphicalView.jsx","components/detail/hourlyAverages/table.jsx","components/detail/hourlyAverages/hourlyAveragesVertical.jsx","components/detail/histogram/totalTime.jsx","components/detail/histogram/nightPhase.jsx","components/detail/histogram/dayPhase.jsx","components/detail/histogram/print.jsx","components/detail/histogram/histogramVertical.jsx","components/detail/pieGraphic/systole/totalTime.jsx","components/detail/pieGraphic/systole/dayPhase.jsx","components/detail/pieGraphic/systole/nightPhase.jsx","components/detail/pieGraphic/systole/systole.jsx","components/detail/pieGraphic/diastole/totalTime.jsx","components/detail/pieGraphic/diastole/dayPhase.jsx","components/detail/pieGraphic/diastole/nightPhase.jsx","components/detail/pieGraphic/diastole/diastole.jsx","components/detail/pieGraphic/pieGraphicVertical.jsx","components/detail/correlation/chart.jsx","components/detail/correlation/correlation.jsx","components/detail/findings/saved.jsx","components/detail/findings/findings.jsx","components/detail/bar.jsx","components/detail/singleValue/singleValueHorizontal.jsx","components/detail/hourlyAverages/hourlyAveragesHorizontal.jsx","components/detail/histogram/histogramHorizontal.jsx","components/detail/pieGraphic/pieGraphicHorizontal.jsx","components/detail/detail.jsx","components/useMedia.jsx","App.js","reportWebVitals.js","index.js"],"names":["OverallStatistics","props","createData","n","maximum","average","minimum","standard_dev","classes","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","useStyles","rows","Fragment","Grid","xs","Paper","style","color","borderRadius","elevation","fontWidth","className","width","TableContainer","component","Table","table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","DayPhaseStatistics","NightPhaseStatistics","DayNightAnalysis","switchWidth","window","innerWidth","useReRender","useState","trigger","setTrigger","windowWidth","undefined","height","windowSize","setWindowSize","useEffect","handleResize","innerHeight","addEventListener","removeEventListener","useWindowSize","Math","abs","data","GraphicalView","wrapper","textAlign","reRender","React","resizeTimer","clearTimeout","setTimeout","update","aspect","margin","top","right","left","bottom","stroke","strokeDasharray","dataKey","tickCount","type","strokeWidth","CircularProgress","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","a11yProps","OverviewVertical","setValue","tabs","borderRight","divider","panel","padding","paddingTop","innerPanelPadding","AppBar","position","Tabs","onChange","event","newValue","variant","scrollButtons","indicatorColor","textColor","Tab","label","OverviewHorizontal","verticalTabsWidth","display","maxWidth","orientation","minWidth","time","systole","diastole","hr","error","notes","TableCustom","SingleValueVertical","print","Number","isInteger","isAnimationActive","HourlyAveragesVertical","TotalTime","histogramWidth","fill","NightPhase","DayPhase","spacing","extendedIcon","marginRight","HistogramVertical","name","COLORS","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","textAnchor","verticalAnchor","toFixed","subTitle","h2Style","labelLine","entry","length","Systole","title","h1Style","marginTop","container","justify","Diastole","PieGraphicVertical","red","blue","redLine","blueLine","Chart","unit","offset","angle","dot","activeDot","legendType","Correlation","Alert","Saved","open","setOpen","handleClose","reason","Button","onClick","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","Findings","field","grid","TextField","placeholder","multiline","item","menuButton","Bar","Toolbar","IconButton","href","edge","path","mdiArrowLeftCircle","size","SingleValueHorizontal","HourlyAveragesHorizontal","HistogramHorizontal","PieGraphicHorizontal","Detail","pieGraphicsAspect","correlationAspect","breakPoint","breakPointName","useTheme","useMediaQuery","breakpoints","up","sm","md","lg","xl","useMedia","outerPanelPadding","App","CssBaseline","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3ea45e6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nfunction OverallStatistics(props) {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n    }));\r\n\r\n    function createData(n, maximum, average, minimum, standard_dev) {\r\n        return { n, maximum, average, minimum, standard_dev };\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const rows = [\r\n        createData('Systole [mmHg]', 80, 108, 151, 14.7),\r\n        createData('Diastole [mmHg]', 53, 67, 106, 11.3),\r\n        createData('MAP [mmHg]', 63, 84, 129, 14.4),\r\n        createData('HR [min-1]', 63, 77, 98, 8.1),\r\n    ];\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid xs={12}>\r\n                <Paper style={{backgroundColor: \"white\",\r\n                    color: \"#009999\", borderRadius: props.borderRadius }} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className=\"h1_style\">Overview/Overall Statistics</h1>\r\n                        :<h2 className=\"h1_style\">Overview/Overall Statistics</h2>)}\r\n                </Paper>\r\n            </Grid>\r\n            <div style={{ width: \"100%\" }}>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"left\">N=76</TableCell>\r\n                                <TableCell align=\"left\">Maximum</TableCell>\r\n                                <TableCell align=\"left\">Average</TableCell>\r\n                                <TableCell align=\"left\">Minimum</TableCell>\r\n                                <TableCell align=\"left\">Standard Dev.</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <TableRow key={row.n}>\r\n                                    <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n                                        {row.n}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">{row.maximum}</TableCell>\r\n                                    <TableCell align=\"left\">{row.average}</TableCell>\r\n                                    <TableCell align=\"left\">{row.minimum}</TableCell>\r\n                                    <TableCell align=\"left\">{row.standard_dev}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default OverallStatistics;","import React from \"react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nfunction DayPhaseStatistics(props) {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n    }));\r\n\r\n    function createData(n, maximum, average, minimum, standard_dev) {\r\n        return { n, maximum, average, minimum, standard_dev };\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const rows = [\r\n        createData('Systole [mmHg]', 100, 108, 151, 14.7),\r\n        createData('Diastole [mmHg]', 69, 67, 106, 11.3),\r\n        createData('MAP [mmHg]', 63, 84, 129, 14.4),\r\n        createData('HR [min-1]', 63, 77, 98, 8.1),\r\n    ];\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid xs={12}>\r\n                <Paper style={{backgroundColor: \"white\",\r\n                    color: \"#009999\", borderRadius: props.borderRadius }} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className=\"h1_style\">Overview/Day Phase Statistics</h1>\r\n                        :<h2 className=\"h1_style\">Overview/Day Phase Statistics</h2>)}\r\n                </Paper>\r\n            </Grid>\r\n            <div style={{ width: \"100%\" }}>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"left\">N=76</TableCell>\r\n                                <TableCell align=\"left\">Maximum</TableCell>\r\n                                <TableCell align=\"left\">Average</TableCell>\r\n                                <TableCell align=\"left\">Minimum</TableCell>\r\n                                <TableCell align=\"left\">Standard Dev.</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <TableRow key={row.n}>\r\n                                    <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n                                        {row.n}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">{row.maximum}</TableCell>\r\n                                    <TableCell align=\"left\">{row.average}</TableCell>\r\n                                    <TableCell align=\"left\">{row.minimum}</TableCell>\r\n                                    <TableCell align=\"left\">{row.standard_dev}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default DayPhaseStatistics;","import React from \"react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nfunction NightPhaseStatistics(props) {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n    }));\r\n\r\n    function createData(n, maximum, average, minimum, standard_dev) {\r\n        return { n, maximum, average, minimum, standard_dev };\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const rows = [\r\n        createData('Systole [mmHg]', 80, 108, 151, 14.7),\r\n        createData('Diastole [mmHg]', 150, 67, 106, 11.3),\r\n        createData('MAP [mmHg]', 63, 84, 129, 14.4),\r\n        createData('HR [min-1]', 63, 77, 98, 8.1),\r\n    ];\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid xs={12}>\r\n                <Paper style={{backgroundColor: \"white\",\r\n                    color: \"#009999\", borderRadius: props.borderRadius }} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className=\"h1_style\">Overview/Night Phase Statistics</h1>\r\n                        :<h2 className=\"h1_style\">Overview/Night Phase Statistics</h2>)}\r\n                </Paper>\r\n            </Grid>\r\n            <div style={{ width: \"100%\" }}>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"left\">N=76</TableCell>\r\n                                <TableCell align=\"left\">Maximum</TableCell>\r\n                                <TableCell align=\"left\">Average</TableCell>\r\n                                <TableCell align=\"left\">Minimum</TableCell>\r\n                                <TableCell align=\"left\">Standard Dev.</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <TableRow key={row.n}>\r\n                                    <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n                                        {row.n}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">{row.maximum}</TableCell>\r\n                                    <TableCell align=\"left\">{row.average}</TableCell>\r\n                                    <TableCell align=\"left\">{row.minimum}</TableCell>\r\n                                    <TableCell align=\"left\">{row.standard_dev}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default NightPhaseStatistics;","import React from \"react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nfunction DayNightAnalysis(props) {\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n    }));\r\n\r\n    function createData(n, maximum, average, minimum, standard_dev) {\r\n        return { n, maximum, average, minimum, standard_dev };\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const rows = [\r\n        createData('Systole [mmHg]', 80, 108, 151, 14.7),\r\n        createData('Diastole [mmHg]', 53, 67, 106, 11.3),\r\n        createData('MAP [mmHg]', 63, 84, 129, 14.4),\r\n        createData('HR [min-1]', 63, 77, 98, 8.1),\r\n    ];\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid xs={12}>\r\n                <Paper style={{backgroundColor: \"white\",\r\n                    color: \"#009999\", borderRadius: props.borderRadius }} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className=\"h1_style\">Overview/Day and Night Analysis</h1>\r\n                        :<h2 className=\"h1_style\">Overview/Day and Night Analysis</h2>)}\r\n                </Paper>\r\n            </Grid>\r\n            <div style={{ width: \"100%\" }}>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"left\">N=76</TableCell>\r\n                                <TableCell align=\"left\">Maximum</TableCell>\r\n                                <TableCell align=\"left\">Average</TableCell>\r\n                                <TableCell align=\"left\">Minimum</TableCell>\r\n                                <TableCell align=\"left\">Standard Dev.</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <TableRow key={row.n}>\r\n                                    <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n                                        {row.n}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">{row.maximum}</TableCell>\r\n                                    <TableCell align=\"left\">{row.average}</TableCell>\r\n                                    <TableCell align=\"left\">{row.minimum}</TableCell>\r\n                                    <TableCell align=\"left\">{row.standard_dev}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default DayNightAnalysis;","import useWindowSize from \"./useWindowSize\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nlet switchWidth = window.innerWidth\r\n\r\nexport default function useReRender() {\r\n    const [trigger, setTrigger] = useState(false);\r\n\r\n    const windowWidth = useWindowSize().width\r\n\r\n    let width = window.innerWidth\r\n\r\n    const handleResize = () => {\r\n        width = window.innerWidth\r\n    }\r\n\r\n    const handleTrigger = () =>{\r\n        setTrigger(!trigger)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", handleResize);\r\n        if (Math.abs(switchWidth - width) >= 20){\r\n            switchWidth = width\r\n            handleTrigger()\r\n        }\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, [windowWidth]);\r\n\r\n    return trigger;\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useWindowSize() {\r\n    // Initialize state with undefined width/height so server and client renders match\r\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: undefined,\r\n        height: undefined\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Handler to call on window resize\r\n        function handleResize() {\r\n            // Set window width/height to state\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight\r\n            });\r\n        }\r\n\r\n        // Add event listener\r\n        window.addEventListener(\"resize\", handleResize);\r\n\r\n        // Call handler right away so state gets updated with initial window size\r\n        handleResize();\r\n\r\n        // Remove event listener on cleanup\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount\r\n\r\n    return windowSize;\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    ResponsiveContainer,\r\n    Legend,\r\n} from 'recharts';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport useReRender from \"../../useReRender\";\r\n\r\n\r\nconst data = [\r\n    {\r\n        \"name\": \"00:00\",\r\n        \"Systole\": 10,\r\n        \"MAP\": 20,\r\n        \"Diastole\": 30,\r\n        \"Average1\": 40,\r\n        \"Average2\": 50,\r\n        \"HR\":60,\r\n    },\r\n    {\r\n        \"name\": \"02:00\",\r\n        \"Systole\": 20,\r\n        \"MAP\": 30,\r\n        \"Diastole\": 40,\r\n        \"Average1\": 50,\r\n        \"Average2\": 60,\r\n        \"HR\":70,\r\n    },\r\n    {\r\n        \"name\": \"04:00\",\r\n        \"Systole\": 15,\r\n        \"MAP\": 25,\r\n        \"Diastole\": 35,\r\n        \"Average1\": 45,\r\n        \"Average2\": 55,\r\n        \"HR\":65,\r\n    },\r\n    {\r\n        \"name\": \"06:00\",\r\n        \"Systole\": 25,\r\n        \"MAP\": 35,\r\n        \"Diastole\": 45,\r\n        \"Average1\": 55,\r\n        \"Average2\": 65,\r\n        \"HR\":75,\r\n    },\r\n    {\r\n        \"name\": \"08:00\",\r\n        \"Systole\": 35,\r\n        \"MAP\": 45,\r\n        \"Diastole\": 55,\r\n        \"Average1\": 65,\r\n        \"Average2\": 75,\r\n        \"HR\":85,\r\n    },\r\n    {\r\n        \"name\": \"10:00\",\r\n        \"Systole\": 30,\r\n        \"MAP\": 40,\r\n        \"Diastole\": 50,\r\n        \"Average1\": 60,\r\n        \"Average2\": 70,\r\n        \"HR\":80,\r\n    },\r\n    {\r\n        \"name\": \"12:00\",\r\n        \"Systole\": 40,\r\n        \"MAP\": 50,\r\n        \"Diastole\": 60,\r\n        \"Average1\": 70,\r\n        \"Average2\": 80,\r\n        \"HR\":90,\r\n    },\r\n    {\r\n        \"name\": \"14:00\",\r\n        \"Systole\": 50,\r\n        \"MAP\": 60,\r\n        \"Diastole\": 70,\r\n        \"Average1\": 80,\r\n        \"Average2\": 90,\r\n        \"HR\":100,\r\n    },\r\n    {\r\n        \"name\": \"16:00\",\r\n        \"Systole\": 45,\r\n        \"MAP\": 55,\r\n        \"Diastole\": 65,\r\n        \"Average1\": 75,\r\n        \"Average2\": 85,\r\n        \"HR\":95,\r\n    },\r\n    {\r\n        \"name\": \"18:00\",\r\n        \"Systole\": 55,\r\n        \"MAP\": 65,\r\n        \"Diastole\": 75,\r\n        \"Average1\": 85,\r\n        \"Average2\": 95,\r\n        \"HR\":105,\r\n    },\r\n    {\r\n        \"name\": \"20:00\",\r\n        \"Systole\": 65,\r\n        \"MAP\": 75,\r\n        \"Diastole\": 85.8,\r\n        \"Average1\": 95,\r\n        \"Average2\": 105,\r\n        \"HR\":110,\r\n    },\r\n    {\r\n        \"name\": \"22:00\",\r\n        \"Systole\": 60,\r\n        \"MAP\": 70,\r\n        \"Diastole\": 80,\r\n        \"Average1\": 90,\r\n        \"Average2\": 100,\r\n        \"HR\":105,\r\n    },\r\n    {\r\n        \"name\": \"24:00\",\r\n        \"Systole\": 70,\r\n        \"MAP\": 80,\r\n        \"Diastole\": 90,\r\n        \"Average1\": 100,\r\n        \"Average2\": 110,\r\n        \"HR\":120,\r\n    },\r\n]\r\n\r\nfunction GraphicalView(props){\r\n    const useStyles = makeStyles({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const reRender = useReRender()\r\n\r\n    const [trigger, setTrigger] = React.useState(true);\r\n\r\n    const update = (resizeTimer) => {\r\n        setTrigger(false)\r\n        clearTimeout(resizeTimer);\r\n        resizeTimer = setTimeout(function() {\r\n            setTrigger(true)\r\n        }, 250);\r\n    }\r\n\r\n    let resizeTimer;\r\n\r\n    React.useEffect(()=>{\r\n        update(resizeTimer)\r\n    }, [reRender]);\r\n\r\n\r\n    const renderChart = () => {\r\n        if (trigger){\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width=\"100%\" aspect={props.aspect}>\r\n                            <LineChart data={data}\r\n                                       margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis  tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Line type=\"monotone\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      dataKey=\"Systole\" stroke=\"#003399\" />\r\n                                <Line type=\"monotone\" strokeWidth=\"0.4\"\r\n                                      dataKey=\"MAP\"\r\n                                      stroke=\"#990033\" />\r\n                                <Line type=\"monotone\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      dataKey=\"Diastole\" stroke=\"#009933\" />\r\n                                <Line type=\"monotone\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      dataKey=\"Average1\" stroke=\"#990033\" />\r\n                                <Line type=\"monotone\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      dataKey=\"Average2\" stroke=\"#990033\" />\r\n                            </LineChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width=\"100%\" aspect={props.aspect}>\r\n                            <LineChart data={data}\r\n                                       margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Line type=\"monotone\"\r\n                                      strokeWidth=\"0.4\"\r\n                                      dataKey=\"HR\" stroke=\"#990033\" />\r\n                            </LineChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }else {\r\n            return(\r\n                <div className={classes.wrapper}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid xs={12}>\r\n                <Paper style={{backgroundColor: \"white\",\r\n                    color: \"#009999\", borderRadius: props.borderRadius }} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className=\"h1_style\">Single Values/Graphical View</h1>\r\n                        :<h2 className=\"h1_style\">Single Values/Graphical View</h2>)}\r\n                </Paper>\r\n            </Grid>\r\n            {renderChart()}\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default GraphicalView;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport OverallStatistics from \"./overallStatistics\";\r\nimport DayPhaseStatistics from \"./dayPhaseStatistics\";\r\nimport NightPhaseStatistics from \"./nightPhaseStatistics\";\r\nimport DayNightAnalysis from \"./dayNightAnalysis\";\r\nimport GraphicalView from \"../singleValue/graphicalView\";\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-force-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-force-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-force-tab-${index}`,\r\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\n\r\nfunction OverviewVertical(props){\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const innerPanelPadding = 24;\r\n\r\n    const all = innerPanelPadding*2;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            width: '100%',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        tabs: {\r\n            borderRight: `1px solid ${theme.palette.divider}`,\r\n        },\r\n        panel: {\r\n            margin: \"auto\",\r\n            \"& > div\": {\r\n                padding: \"0 !important\",\r\n                paddingTop: innerPanelPadding + \"px !important\",\r\n            },\r\n            width: \"100%\",\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"on\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    aria-label=\"scrollable force tabs example\"\r\n                >\r\n                    <Tab label=\"Overall Statistics\" {...a11yProps(0)} />\r\n                    <Tab label=\"Day Phase Statistics\" {...a11yProps(1)} />\r\n                    <Tab label=\"Night Phase Statistics\" {...a11yProps(2)} />\r\n                    <Tab label=\"Day and Night Analysis\" {...a11yProps(3)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel className={classes.panel} value={value} index={0}>\r\n                <OverallStatistics borderRadius={props.borderRadius}\r\n                                   fontWidth={props.fontWidth}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={1}>\r\n                <DayPhaseStatistics borderRadius={props.borderRadius}\r\n                                    fontWidth={props.fontWidth}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={2}>\r\n                <NightPhaseStatistics borderRadius={props.borderRadius}\r\n                                      fontWidth={props.fontWidth}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={3}>\r\n                <DayNightAnalysis borderRadius={props.borderRadius}\r\n                                  fontWidth={props.fontWidth}/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default OverviewVertical;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport OverallStatistics from \"./overallStatistics\";\r\nimport DayPhaseStatistics from \"./dayPhaseStatistics\";\r\nimport NightPhaseStatistics from \"./nightPhaseStatistics\";\r\nimport DayNightAnalysis from \"./dayNightAnalysis\";\r\nimport useWindowSize from \"../../useWindowSize\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nexport default function OverviewHorizontal(props) {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const innerPanelPadding = 24;\r\n    const verticalTabsWidth = \"160px\";\r\n\r\n    const all = innerPanelPadding*2;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper,\r\n            display: 'flex',\r\n            height: 224,\r\n        },\r\n        tabs: {\r\n            borderRight: `1px solid ${theme.palette.divider}`,\r\n            maxWidth: verticalTabsWidth + \"%\",\r\n        },\r\n        panel: {\r\n            margin: \"auto\",\r\n            \"& > div\": {\r\n                padding: innerPanelPadding,\r\n            },\r\n            width: `calc(100% - ${all}px - ${verticalTabsWidth} )`,\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"PieGraphicsVertical tabs example\"\r\n                className={classes.tabs}\r\n            >\r\n                <Tab label=\"Overall Statistics\" {...a11yProps(0)} />\r\n                <Tab label=\"Day Phase Statistics\" {...a11yProps(1)} />\r\n                <Tab label=\"Night Phase Statistics\" {...a11yProps(2)} />\r\n                <Tab label=\"Day and Night Analysis\" {...a11yProps(3)} />\r\n            </Tabs>\r\n            <TabPanel className={classes.panel} value={value} index={0}>\r\n                <OverallStatistics borderRadius={props.borderRadius}\r\n                                   fontWidth={props.fontWidth}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={1}>\r\n                <DayPhaseStatistics borderRadius={props.borderRadius}\r\n                                    fontWidth={props.fontWidth}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={2}>\r\n                <NightPhaseStatistics borderRadius={props.borderRadius}\r\n                                      fontWidth={props.fontWidth}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={3}>\r\n                <DayNightAnalysis borderRadius={props.borderRadius}\r\n                                  fontWidth={props.fontWidth}/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\n\r\nfunction createData(time, systole, diastole, map, hr, error, notes) {\r\n    return { time, systole, diastole, map, hr, error, notes};\r\n}\r\n\r\nconst rows = [\r\n    createData('07.09.2015 8:37', 112, 72, 92, 92),\r\n    createData('07.09.2015 8:39', 132, 70, 94, 81),\r\n    createData('07.09.2015 8:53', 112, 68, 79, 73),\r\n    createData('07.09.2015 9:13', 111, 69, 91, 84),\r\n    createData('07.09.2015 9:28', 128, 98, 129, 81),\r\n];\r\n\r\nfunction TableCustom(props){\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid xs={12}>\r\n                <Paper style={{backgroundColor: \"white\",\r\n                    color: \"#009999\", borderRadius: props.borderRadius}} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className=\"h1_style\">Single Values/Table</h1>:\r\n                        <h2 className=\"h1_style\">Single Values/Table</h2>)}\r\n                </Paper>\r\n            </Grid>\r\n            <div style={{ width: \"100%\" }}>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"left\">Time</TableCell>\r\n                                <TableCell align=\"left\">Systole [mmHg]</TableCell>\r\n                                <TableCell align=\"left\">Diastole [mmHg]</TableCell>\r\n                                <TableCell align=\"left\">MAP [mmHg]</TableCell>\r\n                                <TableCell align=\"left\">HR [mmHg]</TableCell>\r\n                                <TableCell align=\"left\">Error</TableCell>\r\n                                <TableCell align=\"left\">Notes</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <TableRow key={row.time}>\r\n                                    <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n                                        {row.time}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">{row.systole}</TableCell>\r\n                                    <TableCell align=\"left\">{row.diastole}</TableCell>\r\n                                    <TableCell align=\"left\">{row.map}</TableCell>\r\n                                    <TableCell align=\"left\">{row.hr}</TableCell>\r\n                                    <TableCell align=\"left\">{row.error}</TableCell>\r\n                                    <TableCell align=\"left\">{row.notes}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TableCustom","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport GraphicalView from \"./graphicalView\";\r\nimport TableCustom from \"./table\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-force-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-force-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-force-tab-${index}`,\r\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction SingleValueVertical(props){\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const innerPanelPadding = 24;\r\n\r\n    const all = innerPanelPadding*2;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            width: '100%',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        tabs: {\r\n            borderRight: `1px solid ${theme.palette.divider}`,\r\n        },\r\n        panel: {\r\n            margin: \"auto\",\r\n            \"& > div\": {\r\n                padding: \"0 !important\",\r\n                paddingTop: innerPanelPadding + \"px !important\",\r\n            },\r\n            width: \"100%\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"on\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    aria-label=\"scrollable force tabs example\"\r\n                >\r\n                    <Tab label=\"Graphical View\" {...a11yProps(0)} />\r\n                    <Tab label=\"Table\" {...a11yProps(1)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel className={classes.panel} value={value} index={0}>\r\n                <GraphicalView borderRadius={props.borderRadius}\r\n                               fontWidth={props.fontWidth} aspect={props.aspect}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={1}>\r\n                <TableCustom borderRadius={props.borderRadius} fontWidth={props.fontWidth}/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SingleValueVertical;\r\n\r\n\r\n","import React from \"react\";\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    ResponsiveContainer,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n} from 'recharts';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport useReRender from \"../../useReRender\";\r\n\r\n\r\n\r\nconst data = [\r\n    {\r\n        \"name\": \"00:00\",\r\n        \"Systole\": 10,\r\n        \"MAP\": 20,\r\n        \"Diastole\": 30,\r\n        \"Average1\": 40,\r\n        \"Average2\": 50,\r\n        \"HR\":60,\r\n    },\r\n    {\r\n        \"name\": \"02:00\",\r\n        \"Systole\": 20,\r\n        \"MAP\": 30,\r\n        \"Diastole\": 40,\r\n        \"Average1\": 50,\r\n        \"Average2\": 60,\r\n        \"HR\":70,\r\n    },\r\n    {\r\n        \"name\": \"04:00\",\r\n        \"Systole\": 15,\r\n        \"MAP\": 25,\r\n        \"Diastole\": 35,\r\n        \"Average1\": 45,\r\n        \"Average2\": 55,\r\n        \"HR\":65,\r\n    },\r\n    {\r\n        \"name\": \"06:00\",\r\n        \"Systole\": 25,\r\n        \"MAP\": 35,\r\n        \"Diastole\": 45,\r\n        \"Average1\": 55,\r\n        \"Average2\": 65,\r\n        \"HR\":75,\r\n    },\r\n    {\r\n        \"name\": \"08:00\",\r\n        \"Systole\": 35,\r\n        \"MAP\": 45,\r\n        \"Diastole\": 55,\r\n        \"Average1\": 65,\r\n        \"Average2\": 75,\r\n        \"HR\":85,\r\n    },\r\n    {\r\n        \"name\": \"10:00\",\r\n        \"Systole\": 30,\r\n        \"MAP\": 40,\r\n        \"Diastole\": 50,\r\n        \"Average1\": 60,\r\n        \"Average2\": 70,\r\n        \"HR\":80,\r\n    },\r\n    {\r\n        \"name\": \"12:00\",\r\n        \"Systole\": 40,\r\n        \"MAP\": 50,\r\n        \"Diastole\": 60,\r\n        \"Average1\": 70,\r\n        \"Average2\": 80,\r\n        \"HR\":90,\r\n    },\r\n    {\r\n        \"name\": \"14:00\",\r\n        \"Systole\": 50,\r\n        \"MAP\": 60,\r\n        \"Diastole\": 70,\r\n        \"Average1\": 80,\r\n        \"Average2\": 90,\r\n        \"HR\":100,\r\n    },\r\n    {\r\n        \"name\": \"16:00\",\r\n        \"Systole\": 45,\r\n        \"MAP\": 55,\r\n        \"Diastole\": 65,\r\n        \"Average1\": 75,\r\n        \"Average2\": 85,\r\n        \"HR\":95,\r\n    },\r\n    {\r\n        \"name\": \"18:00\",\r\n        \"Systole\": 55,\r\n        \"MAP\": 65,\r\n        \"Diastole\": 75,\r\n        \"Average1\": 85,\r\n        \"Average2\": 95,\r\n        \"HR\":105,\r\n    },\r\n    {\r\n        \"name\": \"20:00\",\r\n        \"Systole\": 65,\r\n        \"MAP\": 75,\r\n        \"Diastole\": 85,\r\n        \"Average1\": 95,\r\n        \"Average2\": 105,\r\n        \"HR\":110,\r\n    },\r\n    {\r\n        \"name\": \"22:00\",\r\n        \"Systole\": 60,\r\n        \"MAP\": 70,\r\n        \"Diastole\": 80,\r\n        \"Average1\": 90,\r\n        \"Average2\": 100,\r\n        \"HR\":105,\r\n    },\r\n    {\r\n        \"name\": \"24:00\",\r\n        \"Systole\": 70,\r\n        \"MAP\": 80,\r\n        \"Diastole\": 90,\r\n        \"Average1\": 100,\r\n        \"Average2\": 110,\r\n        \"HR\":120,\r\n    },\r\n]\r\n\r\nfunction GraphicalView(props){\r\n    const useStyles = makeStyles({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const reRender = useReRender()\r\n\r\n    const [trigger, setTrigger] = React.useState(true);\r\n\r\n    const update = (resizeTimer) => {\r\n        setTrigger(false)\r\n        clearTimeout(resizeTimer);\r\n        resizeTimer = setTimeout(function() {\r\n            setTrigger(true)\r\n        }, 250);\r\n    }\r\n\r\n    let resizeTimer;\r\n\r\n    React.useEffect(()=>{\r\n        update(resizeTimer)\r\n    }, [reRender]);\r\n\r\n    const renderDetailChart = () => {\r\n        if (trigger){\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width=\"100%\" aspect={props.aspect}>\r\n                            <LineChart data={data}\r\n                                       margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Line type=\"monotone\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      dataKey=\"Systole\" stroke=\"#003399\" />\r\n                                <Line type=\"monotone\"\r\n                                      strokeWidth=\"0.4\"\r\n                                      dataKey=\"MAP\" stroke=\"#990033\" />\r\n                                <Line type=\"monotone\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      dataKey=\"Diastole\" stroke=\"#009933\" />\r\n                                <Line type=\"monotone\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      dataKey=\"Average1\" stroke=\"#990033\" />\r\n                                <Line type=\"monotone\"\r\n                                      strokeWidth=\"1.5\"\r\n                                      dataKey=\"Average2\" stroke=\"#990033\" />\r\n                            </LineChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width=\"100%\" aspect={props.aspect}>\r\n                            <LineChart data={data}\r\n                                       margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\" />\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Line type=\"monotone\"\r\n                                      strokeWidth=\"0.4\"\r\n                                      dataKey=\"HR\" stroke=\"#990033\" />\r\n                            </LineChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }else {\r\n            return(\r\n                <div className={classes.wrapper}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const renderPrintChart = () => {\r\n        if (trigger){\r\n            if (Number.isInteger(props.width)){\r\n                return (\r\n                    <React.Fragment>\r\n                        <div className=\"print\">\r\n                            <LineChart data={data}\r\n                                       width={props.width}\r\n                                       height={props.width/props.aspect}\r\n                                       margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis  tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Line type=\"monotone\"\r\n                                      isAnimationActive={false}\r\n                                      strokeWidth=\"1.5\"\r\n                                      dataKey=\"Systole\" stroke=\"#003399\" />\r\n                                <Line type=\"monotone\" strokeWidth=\"0.4\"\r\n                                      isAnimationActive={false}\r\n                                      dataKey=\"MAP\"\r\n                                      stroke=\"#990033\" />\r\n                                <Line type=\"monotone\"\r\n                                      isAnimationActive={false}\r\n                                      strokeWidth=\"1.5\"\r\n                                      dataKey=\"Diastole\" stroke=\"#009933\" />\r\n                                <Line type=\"monotone\"\r\n                                      isAnimationActive={false}\r\n                                      strokeWidth=\"1.5\"\r\n                                      dataKey=\"Average1\" stroke=\"#990033\" />\r\n                                <Line type=\"monotone\"\r\n                                      isAnimationActive={false}\r\n                                      strokeWidth=\"1.5\"\r\n                                      dataKey=\"Average2\" stroke=\"#990033\" />\r\n                            </LineChart>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <LineChart data={data}\r\n                                       width={props.width}\r\n                                       height={props.width/props.aspect}\r\n                                       margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Line type=\"monotone\"\r\n                                      isAnimationActive={false}\r\n                                      strokeWidth=\"0.4\"\r\n                                      dataKey=\"HR\" stroke=\"#990033\" />\r\n                            </LineChart>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n            else{\r\n                return (\r\n                    <React.Fragment>\r\n                        <div className=\"print\">\r\n                            <ResponsiveContainer width=\"100%\" aspect={props.aspect}>\r\n                                <LineChart data={data}\r\n                                           margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                                    <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis  tickCount=\"10\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend />\r\n                                    <Line type=\"monotone\"\r\n                                          isAnimationActive={false}\r\n                                          strokeWidth=\"1.5\"\r\n                                          dataKey=\"Systole\" stroke=\"#003399\" />\r\n                                    <Line type=\"monotone\" strokeWidth=\"0.4\"\r\n                                          isAnimationActive={false}\r\n                                          dataKey=\"MAP\"\r\n                                          stroke=\"#990033\" />\r\n                                    <Line type=\"monotone\"\r\n                                          isAnimationActive={false}\r\n                                          strokeWidth=\"1.5\"\r\n                                          dataKey=\"Diastole\" stroke=\"#009933\" />\r\n                                    <Line type=\"monotone\"\r\n                                          isAnimationActive={false}\r\n                                          strokeWidth=\"1.5\"\r\n                                          dataKey=\"Average1\" stroke=\"#990033\" />\r\n                                    <Line type=\"monotone\"\r\n                                          isAnimationActive={false}\r\n                                          strokeWidth=\"1.5\"\r\n                                          dataKey=\"Average2\" stroke=\"#990033\" />\r\n                                </LineChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <ResponsiveContainer width=\"100%\" aspect={props.aspect}>\r\n                                <LineChart data={data}\r\n                                           margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                                    <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis tickCount=\"10\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend />\r\n                                    <Line type=\"monotone\"\r\n                                          isAnimationActive={false}\r\n                                          strokeWidth=\"0.4\"\r\n                                          dataKey=\"HR\" stroke=\"#990033\" />\r\n                                </LineChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }else {\r\n            return(\r\n                <div className={classes.wrapper}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid xs={12}>\r\n                <Paper style={{backgroundColor: \"white\",\r\n                    color: \"#009999\", borderRadius: props.borderRadius }} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className=\"h1_style\">Hourly Averages/Graphical View</h1>\r\n                        :<h2 className=\"h1_style\">Hourly Averages/Graphical View</h2>)}\r\n                </Paper>\r\n            </Grid>\r\n            {(props.print ? renderPrintChart() : renderDetailChart())}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default GraphicalView;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nfunction createData(time, systole, diastole, map, hr, error, notes) {\r\n    return { time, systole, diastole, map, hr, error, notes};\r\n}\r\n\r\nconst rows = [\r\n    createData('07.09.2015 8:37', 112, 72, 92, 92),\r\n    createData('07.09.2015 8:39', 132, 70, 94, 81),\r\n    createData('07.09.2015 8:53', 112, 68, 79, 73),\r\n    createData('07.09.2015 9:13', 111, 69, 91, 84),\r\n    createData('07.09.2015 9:28', 128, 98, 129, 81),\r\n];\r\n\r\n\r\nfunction TableCustom(props){\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid xs={12}>\r\n                <Paper style={{backgroundColor: \"white\",\r\n                    color: \"#009999\", borderRadius: props.borderRadius }} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className=\"h1_style\">Hourly Averages/Table</h1>\r\n                        :<h2 className=\"h1_style\">Hourly Averages/Table</h2>)}\r\n                </Paper>\r\n            </Grid>\r\n            <div style={{ width: \"100%\" }}>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"left\">Time</TableCell>\r\n                                <TableCell align=\"left\">Systole [mmHg]</TableCell>\r\n                                <TableCell align=\"left\">Diastole [mmHg]</TableCell>\r\n                                <TableCell align=\"left\">MAP [mmHg]</TableCell>\r\n                                <TableCell align=\"left\">HR [mmHg]</TableCell>\r\n                                <TableCell align=\"left\">Error</TableCell>\r\n                                <TableCell align=\"left\">Notes</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <TableRow key={row.time}>\r\n                                    <TableCell align=\"left\" component=\"th\" scope=\"row\">\r\n                                        {row.time}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">{row.systole}</TableCell>\r\n                                    <TableCell align=\"left\">{row.diastole}</TableCell>\r\n                                    <TableCell align=\"left\">{row.map}</TableCell>\r\n                                    <TableCell align=\"left\">{row.hr}</TableCell>\r\n                                    <TableCell align=\"left\">{row.error}</TableCell>\r\n                                    <TableCell align=\"left\">{row.notes}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TableCustom","import React, { useRef } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport GraphicalView from \"./graphicalView\";\r\nimport TableCustom from \"./table\";\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-force-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-force-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-force-tab-${index}`,\r\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction HourlyAveragesVertical(props){\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const innerPanelPadding = 24;\r\n\r\n    const all = innerPanelPadding*2;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            width: '100%',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        tabs: {\r\n            borderRight: `1px solid ${theme.palette.divider}`,\r\n        },\r\n        panel: {\r\n            margin: \"auto\",\r\n            \"& > div\": {\r\n                padding: \"0 !important\",\r\n                paddingTop: innerPanelPadding + \"px !important\",\r\n            },\r\n            width: \"100%\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"on\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    aria-label=\"scrollable force tabs example\"\r\n                >\r\n                    <Tab label=\"Graphical View\" {...a11yProps(0)} />\r\n                    <Tab label=\"Table\" {...a11yProps(1)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel className={classes.panel} value={value} index={0}>\r\n                <GraphicalView borderRadius={props.borderRadius}\r\n                               fontWidth={props.fontWidth} aspect={props.aspect}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={1}>\r\n                <TableCustom borderRadius={props.borderRadius}\r\n                             fontWidth={props.fontWidth}/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default HourlyAveragesVertical\r\n","import React from \"react\";\r\nimport {\r\n    BarChart,\r\n    Bar,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Legend,\r\n    Tooltip, ResponsiveContainer,\r\n} from \"recharts\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport useReRender from \"../../useReRender\";\r\n\r\n\r\nconst data = [\r\n    {\r\n        \"name\": \"00:00\",\r\n        \"Systole\": 10,\r\n        \"MAP\": 20,\r\n        \"Diastole\": 30,\r\n        \"Average1\": 40,\r\n        \"Average2\": 50,\r\n        \"HR\":60,\r\n    },\r\n    {\r\n        \"name\": \"02:00\",\r\n        \"Systole\": 20,\r\n        \"MAP\": 30,\r\n        \"Diastole\": 40,\r\n        \"Average1\": 50,\r\n        \"Average2\": 60,\r\n        \"HR\":70,\r\n    },\r\n    {\r\n        \"name\": \"04:00\",\r\n        \"Systole\": 15,\r\n        \"MAP\": 25,\r\n        \"Diastole\": 35,\r\n        \"Average1\": 45,\r\n        \"Average2\": 55,\r\n        \"HR\":65,\r\n    },\r\n    {\r\n        \"name\": \"06:00\",\r\n        \"Systole\": 25,\r\n        \"MAP\": 35,\r\n        \"Diastole\": 45,\r\n        \"Average1\": 55,\r\n        \"Average2\": 65,\r\n        \"HR\":75,\r\n    },\r\n    {\r\n        \"name\": \"08:00\",\r\n        \"Systole\": 35,\r\n        \"MAP\": 45,\r\n        \"Diastole\": 55,\r\n        \"Average1\": 65,\r\n        \"Average2\": 75,\r\n        \"HR\":85,\r\n    },\r\n    {\r\n        \"name\": \"10:00\",\r\n        \"Systole\": 30,\r\n        \"MAP\": 40,\r\n        \"Diastole\": 50,\r\n        \"Average1\": 60,\r\n        \"Average2\": 70,\r\n        \"HR\":80,\r\n    },\r\n    {\r\n        \"name\": \"12:00\",\r\n        \"Systole\": 40,\r\n        \"MAP\": 50,\r\n        \"Diastole\": 60,\r\n        \"Average1\": 70,\r\n        \"Average2\": 80,\r\n        \"HR\":90,\r\n    },\r\n    {\r\n        \"name\": \"14:00\",\r\n        \"Systole\": 50,\r\n        \"MAP\": 60,\r\n        \"Diastole\": 70,\r\n        \"Average1\": 80,\r\n        \"Average2\": 90,\r\n        \"HR\":100,\r\n    },\r\n    {\r\n        \"name\": \"16:00\",\r\n        \"Systole\": 45,\r\n        \"MAP\": 55,\r\n        \"Diastole\": 65,\r\n        \"Average1\": 75,\r\n        \"Average2\": 85,\r\n        \"HR\":95,\r\n    },\r\n    {\r\n        \"name\": \"18:00\",\r\n        \"Systole\": 55,\r\n        \"MAP\": 65,\r\n        \"Diastole\": 75,\r\n        \"Average1\": 85,\r\n        \"Average2\": 95,\r\n        \"HR\":105,\r\n    },\r\n    {\r\n        \"name\": \"20:00\",\r\n        \"Systole\": 65,\r\n        \"MAP\": 75,\r\n        \"Diastole\": 85,\r\n        \"Average1\": 95,\r\n        \"Average2\": 105,\r\n        \"HR\":110,\r\n    },\r\n    {\r\n        \"name\": \"22:00\",\r\n        \"Systole\": 60,\r\n        \"MAP\": 70,\r\n        \"Diastole\": 80,\r\n        \"Average1\": 90,\r\n        \"Average2\": 100,\r\n        \"HR\":105,\r\n    },\r\n    {\r\n        \"name\": \"24:00\",\r\n        \"Systole\": 70,\r\n        \"MAP\": 80,\r\n        \"Diastole\": 90,\r\n        \"Average1\": 100,\r\n        \"Average2\": 110,\r\n        \"HR\":120,\r\n    },\r\n]\r\n\r\n\r\nexport default function TotalTime(props){\r\n    const useStyles = makeStyles({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const reRender = useReRender()\r\n\r\n    const [trigger, setTrigger] = React.useState(true);\r\n\r\n    const update = (resizeTimer) => {\r\n        setTrigger(false)\r\n        clearTimeout(resizeTimer);\r\n        resizeTimer = setTimeout(function() {\r\n            setTrigger(true)\r\n        }, 250);\r\n    }\r\n\r\n    let resizeTimer;\r\n\r\n    React.useEffect(()=>{\r\n        update(resizeTimer)\r\n    }, [reRender]);\r\n\r\n    const renderDetailChart = () => {\r\n        if (trigger){\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                            <BarChart data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar dataKey=\"Systole\" fill=\"#003399\" />\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                            <BarChart data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar dataKey=\"Diastole\" fill=\"#009933\" />\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                            <BarChart data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar dataKey=\"MAP\" fill=\"#993300\" />\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                            <BarChart data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar dataKey=\"HR\" fill=\"#990033\" />\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }else {\r\n            return(\r\n                <div className={classes.wrapper}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const renderPrintChart = () => {\r\n        if (trigger){\r\n            if (Number.isInteger(props.histogramWidth)){\r\n                return (\r\n                    <React.Fragment>\r\n                        <div className=\"print\">\r\n                            <BarChart width={props.histogramWidth}\r\n                                      height={props.histogramWidth/props.aspect} data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar isAnimationActive={false} dataKey=\"Systole\" fill=\"#003399\" />\r\n                            </BarChart>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <BarChart width={props.histogramWidth}\r\n                                      height={props.histogramWidth/props.aspect} data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar isAnimationActive={false} dataKey=\"Diastole\" fill=\"#009933\" />\r\n                            </BarChart>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <BarChart width={props.histogramWidth}\r\n                                      height={props.histogramWidth/props.aspect} data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar isAnimationActive={false} dataKey=\"MAP\" fill=\"#993300\" />\r\n                            </BarChart>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <BarChart width={props.histogramWidth}\r\n                                      height={props.histogramWidth/props.aspect} data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar isAnimationActive={false} dataKey=\"HR\" fill=\"#990033\" />\r\n                            </BarChart>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n            else{\r\n                return (\r\n                    <React.Fragment>\r\n                        <div className=\"print\">\r\n                            <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                                <BarChart data={data}>\r\n                                    <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis tickCount=\"10\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend />\r\n                                    <Bar isAnimationActive={false} dataKey=\"Systole\" fill=\"#003399\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                                <BarChart data={data}>\r\n                                    <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis tickCount=\"10\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend />\r\n                                    <Bar isAnimationActive={false} dataKey=\"Diastole\" fill=\"#009933\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                                <BarChart data={data}>\r\n                                    <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis tickCount=\"10\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend />\r\n                                    <Bar isAnimationActive={false} dataKey=\"MAP\" fill=\"#993300\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                                <BarChart data={data}>\r\n                                    <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis tickCount=\"10\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend />\r\n                                    <Bar isAnimationActive={false} dataKey=\"HR\" fill=\"#990033\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }else {\r\n            return(\r\n                <div className={classes.wrapper}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid xs={12}>\r\n                <Paper style={{backgroundColor: \"white\",\r\n                    color: \"#009999\", borderRadius: props.borderRadius }} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className=\"h1_style\">Histogram/Total Phase</h1>\r\n                        :<h2 className=\"h1_style\">Histogram/Total Phase</h2>)}\r\n                </Paper>\r\n            </Grid>\r\n            {(props.print ? renderPrintChart() : renderDetailChart())}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport useReRender from \"../../useReRender\";\r\n\r\nconst data = [\r\n    {\r\n        \"name\": \"00:00\",\r\n        \"Systole\": 10,\r\n        \"MAP\": 20,\r\n        \"Diastole\": 30,\r\n        \"Average1\": 40,\r\n        \"Average2\": 50,\r\n        \"HR\":60,\r\n    },\r\n    {\r\n        \"name\": \"02:00\",\r\n        \"Systole\": 20,\r\n        \"MAP\": 30,\r\n        \"Diastole\": 40,\r\n        \"Average1\": 50,\r\n        \"Average2\": 60,\r\n        \"HR\":70,\r\n    },\r\n    {\r\n        \"name\": \"04:00\",\r\n        \"Systole\": 15,\r\n        \"MAP\": 25,\r\n        \"Diastole\": 35,\r\n        \"Average1\": 45,\r\n        \"Average2\": 55,\r\n        \"HR\":65,\r\n    },\r\n    {\r\n        \"name\": \"06:00\",\r\n        \"Systole\": 25,\r\n        \"MAP\": 35,\r\n        \"Diastole\": 45,\r\n        \"Average1\": 55,\r\n        \"Average2\": 65,\r\n        \"HR\":75,\r\n    },\r\n    {\r\n        \"name\": \"08:00\",\r\n        \"Systole\": 35,\r\n        \"MAP\": 45,\r\n        \"Diastole\": 55,\r\n        \"Average1\": 65,\r\n        \"Average2\": 75,\r\n        \"HR\":85,\r\n    },\r\n    {\r\n        \"name\": \"10:00\",\r\n        \"Systole\": 30,\r\n        \"MAP\": 40,\r\n        \"Diastole\": 50,\r\n        \"Average1\": 60,\r\n        \"Average2\": 70,\r\n        \"HR\":80,\r\n    },\r\n    {\r\n        \"name\": \"12:00\",\r\n        \"Systole\": 40,\r\n        \"MAP\": 50,\r\n        \"Diastole\": 60,\r\n        \"Average1\": 70,\r\n        \"Average2\": 80,\r\n        \"HR\":90,\r\n    },\r\n    {\r\n        \"name\": \"14:00\",\r\n        \"Systole\": 50,\r\n        \"MAP\": 60,\r\n        \"Diastole\": 70,\r\n        \"Average1\": 80,\r\n        \"Average2\": 90,\r\n        \"HR\":100,\r\n    },\r\n    {\r\n        \"name\": \"16:00\",\r\n        \"Systole\": 45,\r\n        \"MAP\": 55,\r\n        \"Diastole\": 65,\r\n        \"Average1\": 75,\r\n        \"Average2\": 85,\r\n        \"HR\":95,\r\n    },\r\n    {\r\n        \"name\": \"18:00\",\r\n        \"Systole\": 55,\r\n        \"MAP\": 65,\r\n        \"Diastole\": 75,\r\n        \"Average1\": 85,\r\n        \"Average2\": 95,\r\n        \"HR\":105,\r\n    },\r\n    {\r\n        \"name\": \"20:00\",\r\n        \"Systole\": 65,\r\n        \"MAP\": 75,\r\n        \"Diastole\": 85,\r\n        \"Average1\": 95,\r\n        \"Average2\": 105,\r\n        \"HR\":110,\r\n    },\r\n    {\r\n        \"name\": \"22:00\",\r\n        \"Systole\": 60,\r\n        \"MAP\": 70,\r\n        \"Diastole\": 80,\r\n        \"Average1\": 90,\r\n        \"Average2\": 100,\r\n        \"HR\":105,\r\n    },\r\n    {\r\n        \"name\": \"24:00\",\r\n        \"Systole\": 70,\r\n        \"MAP\": 80,\r\n        \"Diastole\": 90,\r\n        \"Average1\": 100,\r\n        \"Average2\": 110,\r\n        \"HR\":120,\r\n    },\r\n]\r\n\r\n\r\nexport default function NightPhase(props){\r\n    const useStyles = makeStyles({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const reRender = useReRender()\r\n\r\n    const [trigger, setTrigger] = React.useState(true);\r\n\r\n    const update = (resizeTimer) => {\r\n        setTrigger(false)\r\n        clearTimeout(resizeTimer);\r\n        resizeTimer = setTimeout(function() {\r\n            setTrigger(true)\r\n        }, 250);\r\n    }\r\n\r\n    let resizeTimer;\r\n\r\n    React.useEffect(()=>{\r\n        update(resizeTimer)\r\n    }, [reRender]);\r\n\r\n\r\n    const renderDetailChart = () => {\r\n        if (trigger){\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                            <BarChart data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar dataKey=\"Systole\" fill=\"#003399\" />\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                            <BarChart data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar dataKey=\"Diastole\" fill=\"#009933\" />\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                            <BarChart data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar dataKey=\"MAP\" fill=\"#993300\" />\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                            <BarChart data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar dataKey=\"HR\" fill=\"#990033\" />\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }else {\r\n            return(\r\n                <div className={classes.wrapper}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const renderPrintChart = () => {\r\n        if (trigger){\r\n            if (Number.isInteger(props.histogramWidth)){\r\n                return (\r\n                    <React.Fragment>\r\n                        <div className=\"print\">\r\n                            <BarChart width={props.histogramWidth}\r\n                                      height={props.histogramWidth/props.aspect} data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar isAnimationActive={false} dataKey=\"Systole\" fill=\"#003399\" />\r\n                            </BarChart>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <BarChart width={props.histogramWidth}\r\n                                      height={props.histogramWidth/props.aspect} data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar isAnimationActive={false} dataKey=\"Diastole\" fill=\"#009933\" />\r\n                            </BarChart>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <BarChart width={props.histogramWidth}\r\n                                      height={props.histogramWidth/props.aspect} data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar isAnimationActive={false} dataKey=\"MAP\" fill=\"#993300\" />\r\n                            </BarChart>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <BarChart width={props.histogramWidth}\r\n                                      height={props.histogramWidth/props.aspect} data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar isAnimationActive={false} dataKey=\"HR\" fill=\"#990033\" />\r\n                            </BarChart>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n            else{\r\n                return (\r\n                    <React.Fragment>\r\n                        <div className=\"print\">\r\n                            <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                                <BarChart data={data}>\r\n                                    <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis tickCount=\"10\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend />\r\n                                    <Bar isAnimationActive={false} dataKey=\"Systole\" fill=\"#003399\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                                <BarChart data={data}>\r\n                                    <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis tickCount=\"10\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend />\r\n                                    <Bar isAnimationActive={false} dataKey=\"Diastole\" fill=\"#009933\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                                <BarChart data={data}>\r\n                                    <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis tickCount=\"10\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend />\r\n                                    <Bar isAnimationActive={false} dataKey=\"MAP\" fill=\"#993300\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                                <BarChart data={data}>\r\n                                    <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis tickCount=\"10\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend />\r\n                                    <Bar isAnimationActive={false} dataKey=\"HR\" fill=\"#990033\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }else {\r\n            return(\r\n                <div className={classes.wrapper}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid xs={12}>\r\n                <Paper style={{backgroundColor: \"white\",\r\n                    color: \"#009999\", borderRadius: props.borderRadius }} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className=\"h1_style\">Histogram/Night Phase</h1>\r\n                        :<h2 className=\"h1_style\">Histogram/Night Phase</h2>)}\r\n                </Paper>\r\n            </Grid>\r\n            {(props.print ? renderPrintChart() : renderDetailChart())}\r\n        </React.Fragment>\r\n    );\r\n}","import React from \"react\";\r\nimport {\r\n    Bar,\r\n    BarChart,\r\n    CartesianGrid,\r\n    Legend, Line, LineChart,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis\r\n} from \"recharts\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport useReRender from \"../../useReRender\";\r\n\r\nconst data = [\r\n    {\r\n        \"name\": \"00:00\",\r\n        \"Systole\": 10,\r\n        \"MAP\": 20,\r\n        \"Diastole\": 30,\r\n        \"Average1\": 40,\r\n        \"Average2\": 50,\r\n        \"HR\":60,\r\n    },\r\n    {\r\n        \"name\": \"02:00\",\r\n        \"Systole\": 20,\r\n        \"MAP\": 30,\r\n        \"Diastole\": 40,\r\n        \"Average1\": 50,\r\n        \"Average2\": 60,\r\n        \"HR\":70,\r\n    },\r\n    {\r\n        \"name\": \"04:00\",\r\n        \"Systole\": 15,\r\n        \"MAP\": 25,\r\n        \"Diastole\": 35,\r\n        \"Average1\": 45,\r\n        \"Average2\": 55,\r\n        \"HR\":65,\r\n    },\r\n    {\r\n        \"name\": \"06:00\",\r\n        \"Systole\": 25,\r\n        \"MAP\": 35,\r\n        \"Diastole\": 45,\r\n        \"Average1\": 55,\r\n        \"Average2\": 65,\r\n        \"HR\":75,\r\n    },\r\n    {\r\n        \"name\": \"08:00\",\r\n        \"Systole\": 35,\r\n        \"MAP\": 45,\r\n        \"Diastole\": 55,\r\n        \"Average1\": 65,\r\n        \"Average2\": 75,\r\n        \"HR\":85,\r\n    },\r\n    {\r\n        \"name\": \"10:00\",\r\n        \"Systole\": 30,\r\n        \"MAP\": 40,\r\n        \"Diastole\": 50,\r\n        \"Average1\": 60,\r\n        \"Average2\": 70,\r\n        \"HR\":80,\r\n    },\r\n    {\r\n        \"name\": \"12:00\",\r\n        \"Systole\": 40,\r\n        \"MAP\": 50,\r\n        \"Diastole\": 60,\r\n        \"Average1\": 70,\r\n        \"Average2\": 80,\r\n        \"HR\":90,\r\n    },\r\n    {\r\n        \"name\": \"14:00\",\r\n        \"Systole\": 50,\r\n        \"MAP\": 60,\r\n        \"Diastole\": 70,\r\n        \"Average1\": 80,\r\n        \"Average2\": 90,\r\n        \"HR\":100,\r\n    },\r\n    {\r\n        \"name\": \"16:00\",\r\n        \"Systole\": 45,\r\n        \"MAP\": 55,\r\n        \"Diastole\": 65,\r\n        \"Average1\": 75,\r\n        \"Average2\": 85,\r\n        \"HR\":95,\r\n    },\r\n    {\r\n        \"name\": \"18:00\",\r\n        \"Systole\": 55,\r\n        \"MAP\": 65,\r\n        \"Diastole\": 75,\r\n        \"Average1\": 85,\r\n        \"Average2\": 95,\r\n        \"HR\":105,\r\n    },\r\n    {\r\n        \"name\": \"20:00\",\r\n        \"Systole\": 65,\r\n        \"MAP\": 75,\r\n        \"Diastole\": 85,\r\n        \"Average1\": 95,\r\n        \"Average2\": 105,\r\n        \"HR\":110,\r\n    },\r\n    {\r\n        \"name\": \"22:00\",\r\n        \"Systole\": 60,\r\n        \"MAP\": 70,\r\n        \"Diastole\": 80,\r\n        \"Average1\": 90,\r\n        \"Average2\": 100,\r\n        \"HR\":105,\r\n    },\r\n    {\r\n        \"name\": \"24:00\",\r\n        \"Systole\": 70,\r\n        \"MAP\": 80,\r\n        \"Diastole\": 90,\r\n        \"Average1\": 100,\r\n        \"Average2\": 110,\r\n        \"HR\":120,\r\n    },\r\n]\r\n\r\nexport default function DayPhase(props){\r\n    const useStyles = makeStyles({\r\n        wrapper: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const reRender = useReRender()\r\n\r\n    const [trigger, setTrigger] = React.useState(true);\r\n\r\n    const update = (resizeTimer) => {\r\n        setTrigger(false)\r\n        clearTimeout(resizeTimer);\r\n        resizeTimer = setTimeout(function() {\r\n            setTrigger(true)\r\n        }, 250);\r\n    }\r\n\r\n    let resizeTimer;\r\n\r\n    React.useEffect(()=>{\r\n        update(resizeTimer)\r\n    }, [reRender]);\r\n\r\n\r\n    const renderDetailChart = () => {\r\n        if (trigger){\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                            <BarChart data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar dataKey=\"Systole\" fill=\"#003399\" />\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                            <BarChart data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar dataKey=\"Diastole\" fill=\"#009933\" />\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                            <BarChart data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar dataKey=\"MAP\" fill=\"#993300\" />\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                    <div className=\"chart\">\r\n                        <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                            <BarChart data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar dataKey=\"HR\" fill=\"#990033\" />\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }else {\r\n            return(\r\n                <div className={classes.wrapper}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const renderPrintChart = () => {\r\n        if (trigger){\r\n            if (Number.isInteger(props.histogramWidth)){\r\n                return (\r\n                    <React.Fragment>\r\n                        <div className=\"print\">\r\n                            <BarChart width={props.histogramWidth}\r\n                                      height={props.histogramWidth/props.aspect} data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar isAnimationActive={false} dataKey=\"Systole\" fill=\"#003399\" />\r\n                            </BarChart>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <BarChart width={props.histogramWidth}\r\n                                      height={props.histogramWidth/props.aspect} data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar isAnimationActive={false} dataKey=\"Diastole\" fill=\"#009933\" />\r\n                            </BarChart>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <BarChart width={props.histogramWidth}\r\n                                      height={props.histogramWidth/props.aspect} data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar isAnimationActive={false} dataKey=\"MAP\" fill=\"#993300\" />\r\n                            </BarChart>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <BarChart width={props.histogramWidth}\r\n                                      height={props.histogramWidth/props.aspect} data={data}>\r\n                                <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"name\" />\r\n                                <YAxis tickCount=\"10\"/>\r\n                                <Tooltip/>\r\n                                <Legend />\r\n                                <Bar isAnimationActive={false} dataKey=\"HR\" fill=\"#990033\" />\r\n                            </BarChart>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n            else{\r\n                return (\r\n                    <React.Fragment>\r\n                        <div className=\"print\">\r\n                            <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                                <BarChart data={data}>\r\n                                    <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis tickCount=\"10\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend />\r\n                                    <Bar isAnimationActive={false} dataKey=\"Systole\" fill=\"#003399\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                                <BarChart data={data}>\r\n                                    <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis tickCount=\"10\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend />\r\n                                    <Bar isAnimationActive={false} dataKey=\"Diastole\" fill=\"#009933\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                                <BarChart data={data}>\r\n                                    <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis tickCount=\"10\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend />\r\n                                    <Bar isAnimationActive={false} dataKey=\"MAP\" fill=\"#993300\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className=\"print\">\r\n                            <ResponsiveContainer width={props.histogramWidth} aspect={props.aspect}>\r\n                                <BarChart data={data}>\r\n                                    <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis tickCount=\"10\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend />\r\n                                    <Bar isAnimationActive={false} dataKey=\"HR\" fill=\"#990033\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }else {\r\n            return(\r\n                <div className={classes.wrapper}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid xs={12}>\r\n                <Paper style={{backgroundColor: \"white\",\r\n                    color: \"#009999\", borderRadius: props.borderRadius }} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className=\"h1_style\">Histogram/Day Phase</h1>\r\n                        :<h2 className=\"h1_style\">Histogram/Day Phase</h2>)}\r\n                </Paper>\r\n            </Grid>\r\n            {(props.print ? renderPrintChart() : renderDetailChart())}\r\n        </React.Fragment>\r\n    );\r\n}","import React from \"react\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nexport default function Print(props){\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Fab color=\"primary\" onClick={props.printButton}\r\n             aria-label=\"add\" className={classes.margin}>\r\n            <PrintIcon />\r\n        </Fab>\r\n    );\r\n}","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport TotalTime from \"./totalTime\";\r\nimport NightPhase from \"./nightPhase\";\r\nimport DayPhase from \"./dayPhase\";\r\nimport Print from \"./print\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport GraphicalView from \"../hourlyAverages/graphicalView\";\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-force-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-force-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-force-tab-${index}`,\r\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport default function HistogramVertical(props) {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const innerPanelPadding = 24;\r\n\r\n    const all = innerPanelPadding*2;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            width: '100%',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        tabs: {\r\n            borderRight: `1px solid ${theme.palette.divider}`,\r\n        },\r\n        panel: {\r\n            margin: \"auto\",\r\n            \"& > div\": {\r\n                padding: \"0 !important\",\r\n                paddingTop: innerPanelPadding + \"px !important\",\r\n            },\r\n            width: \"100%\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"on\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    aria-label=\"scrollable force tabs example\"\r\n                >\r\n                    <Tab label=\"Total Time\" {...a11yProps(0)} />\r\n                    <Tab label=\"Day Phase\" {...a11yProps(1)} />\r\n                    <Tab label=\"Night Phase\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel className={classes.panel} value={value} index={0}>\r\n                <TotalTime borderRadius={props.borderRadius}\r\n                           histogramWidth={props.histogramWidth}\r\n                           fontWidth={props.fontWidth} aspect={props.aspect}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={1}>\r\n                <DayPhase borderRadius={props.borderRadius}\r\n                          histogramWidth={props.histogramWidth}\r\n                          fontWidth={props.fontWidth} aspect={props.aspect}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={2}>\r\n                <NightPhase borderRadius={props.borderRadius}\r\n                            histogramWidth={props.histogramWidth}\r\n                            fontWidth={props.fontWidth} aspect={props.aspect}/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    PieChart, Pie, Cell, Text, ResponsiveContainer,\r\n} from 'recharts';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst data = [\r\n    { name: 'Normal', value: 480 },\r\n    { name: 'Acceptable', value: 480 },\r\n    { name: 'Critical', value: 40 },\r\n];\r\n\r\nconst COLORS = [\"gray\", \"#009933\", \"#990033\",];\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\nconst renderCustomizedLabel = ({\r\n                                   cx, cy, midAngle, innerRadius, outerRadius, percent,\r\n                               }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n        <Text x={x} y={y} fill=\"white\" textAnchor=\"middle\" verticalAnchor=\"middle\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </Text>\r\n    );\r\n};\r\n\r\n\r\nexport default function TotalTime(props){\r\n\r\n    const useStyles = makeStyles({\r\n        subTitle: {\r\n            backgroundColor: \"white !important\",\r\n            color: \"#ec6602 !important\",\r\n            borderRadius: props.borderRadius,\r\n        },\r\n        h2Style: {\r\n            margin: \"0\",\r\n            padding: \"10px\",\r\n        },\r\n        wrapper: {\r\n            width: props.width + \"%\",\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.wrapper}>\r\n                <Paper className={classes.subTitle} elevation={3}>\r\n                    {(props.fontWidth ?\r\n                        <h2 className={classes.h2Style}>Total Time</h2>\r\n                        :<h3 className={classes.h2Style}>Total Time</h3>)}\r\n                </Paper>\r\n                <ResponsiveContainer width=\"100%\" aspect={props.aspect || 1.5}>\r\n                    <PieChart>\r\n                        <Pie\r\n                            data={data}\r\n                            cx={props.cx || \"50%\"}\r\n                            cy=\"50%\"\r\n                            labelLine={false}\r\n                            label={renderCustomizedLabel}\r\n                            isAnimationActive={props.isAnimationActive}\r\n                            innerRadius=\"45%\"\r\n                            outerRadius=\"65%\"\r\n                            fill=\"#8884d8\"\r\n                            dataKey=\"value\"\r\n                        >\r\n                            {\r\n                                data.map((entry, index) =>\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                            }\r\n                        </Pie>\r\n                        <Pie data={data} dataKey=\"value\"\r\n                             cx={props.cx || \"50%\"}\r\n                             cy=\"50%\"\r\n                             innerRadius=\"65%\"\r\n                             outerRadius=\"65%\"\r\n                             isAnimationActive={props.isAnimationActive}\r\n                             fill=\"#8884d8\"\r\n                             labelLine={true}\r\n                             label={(entry) => entry.name}\r\n                        >\r\n                            {\r\n                                data.map((entry, index) =>\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                            }\r\n                        </Pie>\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    PieChart, Pie, Cell, Text, ResponsiveContainer,\r\n} from 'recharts';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst data = [\r\n    { name: 'Normal', value: 480 },\r\n    { name: 'Acceptable', value: 480 },\r\n    { name: 'Critical', value: 40 },\r\n];\r\n\r\nconst COLORS = [\"gray\", \"#009933\", \"#990033\",];\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\nconst renderCustomizedLabel = ({\r\n                                   cx, cy, midAngle, innerRadius, outerRadius, percent,\r\n                               }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n        <Text x={x} y={y} fill=\"white\" textAnchor=\"middle\" verticalAnchor=\"middle\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default function DayPhase(props){\r\n\r\n    const useStyles = makeStyles({\r\n        subTitle: {\r\n            backgroundColor: \"white !important\",\r\n            color: \"#ec6602 !important\",\r\n            borderRadius: props.borderRadius,\r\n        },\r\n        h2Style: {\r\n            margin: \"0\",\r\n            padding: \"10px\",\r\n        },\r\n        wrapper: {\r\n            width: props.width + \"%\",\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.wrapper}>\r\n                <Paper className={classes.subTitle} elevation={3}>\r\n                    {(props.fontWidth ?\r\n                        <h2 className={classes.h2Style}>Day Phase (06:00 - 12:59) - Limit Values 140/90 mmHg</h2>\r\n                        :<h3 className={classes.h2Style}>Day Phase (06:00 - 12:59) - Limit Values 140/90 mmHg</h3>)}\r\n                </Paper>\r\n                <ResponsiveContainer width=\"100%\" aspect={props.aspect || 1.5}>\r\n                    <PieChart>\r\n                        <Pie\r\n                            data={data}\r\n                            cx={props.cx || \"50%\"}\r\n                            cy=\"50%\"\r\n                            labelLine={false}\r\n                            label={renderCustomizedLabel}\r\n                            isAnimationActive={props.isAnimationActive}\r\n                            innerRadius=\"45%\"\r\n                            outerRadius=\"65%\"\r\n                            fill=\"#8884d8\"\r\n                            dataKey=\"value\"\r\n                        >\r\n                            {\r\n                                data.map((entry, index) =>\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                            }\r\n                        </Pie>\r\n                        <Pie data={data} dataKey=\"value\"\r\n                             cx={props.cx || \"50%\"}\r\n                             cy=\"50%\"\r\n                             innerRadius=\"65%\"\r\n                             isAnimationActive={props.isAnimationActive}\r\n                             outerRadius=\"65%\"\r\n                             fill=\"#8884d8\"\r\n                             labelLine={true}\r\n                             label={(entry) => entry.name}\r\n                        >\r\n                            {\r\n                                data.map((entry, index) =>\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                            }\r\n                        </Pie>\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    PieChart, Pie, Cell, Text, ResponsiveContainer,\r\n} from 'recharts';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport useWindowSize from \"../../../useWindowSize\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst data = [\r\n    { name: 'Normal', value: 480 },\r\n    { name: 'Acceptable', value: 480 },\r\n    { name: 'Critical', value: 40 },\r\n];\r\n\r\nconst COLORS = [\"gray\", \"#009933\", \"#990033\",];\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\nconst renderCustomizedLabel = ({\r\n                                   cx, cy, midAngle, innerRadius, outerRadius, percent,\r\n                               }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n        <Text x={x} y={y} fill=\"white\" textAnchor=\"middle\" verticalAnchor=\"middle\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default function NightPhase(props){\r\n\r\n    const useStyles = makeStyles({\r\n        subTitle: {\r\n            backgroundColor: \"white !important\",\r\n            color: \"#ec6602 !important\",\r\n            borderRadius: props.borderRadius,\r\n        },\r\n        h2Style: {\r\n            margin: \"0\",\r\n            padding: \"10px\",\r\n        },\r\n        wrapper: {\r\n            width: props.width + \"%\",\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.wrapper}>\r\n                <Paper className={classes.subTitle} elevation={3}>\r\n                    {(props.fontWidth ?\r\n                        <h2 className={classes.h2Style}>\r\n                            Night Phase (12:59 - 06:00) - Limit Values 140/90 mmHg</h2>\r\n                        :<h3 className={classes.h2Style}>\r\n                            Night Phase (12:59 - 06:00) - Limit Values 140/90 mmHg</h3>)}\r\n                </Paper>\r\n                <ResponsiveContainer width=\"100%\" aspect={props.aspect || 1.5}>\r\n                    <PieChart>\r\n                        <Pie\r\n                            data={data}\r\n                            cx={props.cx || \"50%\"}\r\n                            cy=\"50%\"\r\n                            labelLine={false}\r\n                            label={renderCustomizedLabel}\r\n                            isAnimationActive={props.isAnimationActive}\r\n                            innerRadius=\"45%\"\r\n                            outerRadius=\"65%\"\r\n                            fill=\"#8884d8\"\r\n                            dataKey=\"value\"\r\n                        >\r\n                            {\r\n                                data.map((entry, index) =>\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                            }\r\n                        </Pie>\r\n                        <Pie data={data} dataKey=\"value\"\r\n                             cx={props.cx || \"50%\"}\r\n                             cy=\"50%\"\r\n                             innerRadius=\"65%\"\r\n                             isAnimationActive={props.isAnimationActive}\r\n                             outerRadius=\"65%\"\r\n                             fill=\"#8884d8\"\r\n                             labelLine={true}\r\n                             label={(entry) => entry.name}\r\n                        >\r\n                            {\r\n                                data.map((entry, index) =>\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                            }\r\n                        </Pie>\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","import React from \"react\";\r\nimport TotalTime from \"./totalTime\";\r\nimport DayPhase from \"./dayPhase\";\r\nimport NightPhase from \"./nightPhase\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport useReRender from \"../../../useReRender\";\r\n\r\nexport default function Systole(props){\r\n\r\n    const useStyles = makeStyles({\r\n        title: {\r\n            backgroundColor: \"white !important\",\r\n            color: \"#009999 !important\",\r\n            borderRadius: props.borderRadius,\r\n        },\r\n        h1Style: {\r\n            marginTop: \"0\",\r\n            padding: \"10px\",\r\n        },\r\n        wrapper: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n\r\n    const reRender = useReRender()\r\n\r\n    const [trigger, setTrigger] = React.useState(true);\r\n\r\n    const update = (resizeTimer) => {\r\n        setTrigger(false)\r\n        clearTimeout(resizeTimer);\r\n        resizeTimer = setTimeout(function() {\r\n            setTrigger(true)\r\n        }, 250);\r\n    }\r\n\r\n    let resizeTimer;\r\n\r\n    React.useEffect(()=>{\r\n        update(resizeTimer)\r\n    }, [reRender]);\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const renderChart = () => {\r\n        if (trigger){\r\n            return (\r\n                <React.Fragment>\r\n                    <TotalTime borderRadius={props.borderRadius}\r\n                               cx={props.cx}\r\n                               isAnimationActive={props.isAnimationActive}\r\n                               aspect={props.aspect}\r\n                               fontWidth={props.fontWidth} width={props.width} />\r\n                    <DayPhase aspect={props.aspect}\r\n                              cx={props.cx}\r\n                              isAnimationActive={props.isAnimationActive}\r\n                              borderRadius={props.borderRadius}\r\n                              fontWidth={props.fontWidth} width={props.width}/>\r\n                    <NightPhase aspect={props.aspect}\r\n                                cx={props.cx}\r\n                                isAnimationActive={props.isAnimationActive}\r\n                                borderRadius={props.borderRadius}\r\n                                fontWidth={props.fontWidth} width={props.width}/>\r\n                </React.Fragment>\r\n            );\r\n        }else {\r\n            return(\r\n                <div className={classes.wrapper}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid xs={12}>\r\n                <Paper className={classes.title} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className={classes.h1Style}>Pie Graphic/Systole</h1>\r\n                        :<h2 className={classes.h1Style}>Pie Graphic/Systole</h2>)}\r\n                </Paper>\r\n            </Grid>\r\n            <Grid container justify=\"space-between\">\r\n                {renderChart()}\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    PieChart, Pie, Cell, Text, ResponsiveContainer,\r\n} from 'recharts';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst data = [\r\n    { name: 'Normal', value: 480 },\r\n    { name: 'Acceptable', value: 480 },\r\n    { name: 'Critical', value: 40 },\r\n];\r\n\r\nconst COLORS = [\"gray\", \"#009933\", \"#990033\",];\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\nconst renderCustomizedLabel = ({\r\n                                   cx, cy, midAngle, innerRadius, outerRadius, percent,\r\n                               }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n        <Text x={x} y={y} fill=\"white\" textAnchor=\"middle\" verticalAnchor=\"middle\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </Text>\r\n    );\r\n};\r\n\r\n\r\nexport default function TotalTime(props){\r\n\r\n    const useStyles = makeStyles({\r\n        subTitle: {\r\n            backgroundColor: \"white !important\",\r\n            color: \"#ec6602 !important\",\r\n            borderRadius: props.borderRadius,\r\n        },\r\n        h2Style: {\r\n            margin: \"0\",\r\n            padding: \"10px\",\r\n        },\r\n        wrapper: {\r\n            width: props.width + \"%\",\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.wrapper}>\r\n                <Paper className={classes.subTitle} elevation={3}>\r\n                    {(props.fontWidth ?\r\n                        <h2 className={classes.h2Style}>Total Time</h2>\r\n                        :<h3 className={classes.h2Style}>Total Time</h3>)}\r\n                </Paper>\r\n                <ResponsiveContainer width=\"100%\" aspect={props.aspect || 1.5}>\r\n                    <PieChart>\r\n                        <Pie\r\n                            data={data}\r\n                            cx={props.cx || \"50%\"}\r\n                            cy=\"50%\"\r\n                            labelLine={false}\r\n                            label={renderCustomizedLabel}\r\n                            isAnimationActive={props.isAnimationActive}\r\n                            innerRadius=\"45%\"\r\n                            outerRadius=\"65%\"\r\n                            fill=\"#8884d8\"\r\n                            dataKey=\"value\"\r\n                        >\r\n                            {\r\n                                data.map((entry, index) =>\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                            }\r\n                        </Pie>\r\n                        <Pie data={data} dataKey=\"value\"\r\n                             cx={props.cx || \"50%\"}\r\n                             cy=\"50%\"\r\n                             innerRadius=\"65%\"\r\n                             outerRadius=\"65%\"\r\n                             fill=\"#8884d8\"\r\n                             isAnimationActive={props.isAnimationActive}\r\n                             labelLine={true}\r\n                             label={(entry) => entry.name}\r\n                        >\r\n                            {\r\n                                data.map((entry, index) =>\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                            }\r\n                        </Pie>\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    PieChart, Pie, Cell, Text, ResponsiveContainer,\r\n} from 'recharts';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst data = [\r\n    { name: 'Normal', value: 480 },\r\n    { name: 'Acceptable', value: 480 },\r\n    { name: 'Critical', value: 40 },\r\n];\r\n\r\nconst COLORS = [\"gray\", \"#009933\", \"#990033\",];\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\nconst renderCustomizedLabel = ({\r\n                                   cx, cy, midAngle, innerRadius, outerRadius, percent,\r\n                               }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n        <Text x={x} y={y} fill=\"white\" textAnchor=\"middle\" verticalAnchor=\"middle\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default function DayPhase(props){\r\n\r\n    const useStyles = makeStyles({\r\n        subTitle: {\r\n            backgroundColor: \"white !important\",\r\n            color: \"#ec6602 !important\",\r\n            borderRadius: props.borderRadius,\r\n        },\r\n        h2Style: {\r\n            margin: \"0\",\r\n            padding: \"10px\",\r\n        },\r\n        wrapper: {\r\n            width: props.width + \"%\",\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.wrapper}>\r\n                <Paper className={classes.subTitle} elevation={3}>\r\n                    {(props.fontWidth ?\r\n                        <h2 className={classes.h2Style}>Day Phase (06:00 - 12:59) - Limit Values 140/90 mmHg</h2>\r\n                        :<h3 className={classes.h2Style}>Day Phase (06:00 - 12:59) - Limit Values 140/90 mmHg</h3>)}\r\n                </Paper>\r\n                <ResponsiveContainer width=\"100%\" aspect={props.aspect || 1.5}>\r\n                    <PieChart>\r\n                        <Pie\r\n                            data={data}\r\n                            cx={props.cx || \"50%\"}\r\n                            cy=\"50%\"\r\n                            isAnimationActive={props.isAnimationActive}\r\n                            labelLine={false}\r\n                            label={renderCustomizedLabel}\r\n                            innerRadius=\"45%\"\r\n                            outerRadius=\"65%\"\r\n                            fill=\"#8884d8\"\r\n                            dataKey=\"value\"\r\n                        >\r\n                            {\r\n                                data.map((entry, index) =>\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                            }\r\n                        </Pie>\r\n                        <Pie data={data} dataKey=\"value\"\r\n                             cx={props.cx || \"50%\"}\r\n                             cy=\"50%\"\r\n                             innerRadius=\"65%\"\r\n                             outerRadius=\"65%\"\r\n                             isAnimationActive={props.isAnimationActive}\r\n                             fill=\"#8884d8\"\r\n                             labelLine={true}\r\n                             label={(entry) => entry.name}\r\n                        >\r\n                            {\r\n                                data.map((entry, index) =>\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                            }\r\n                        </Pie>\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    PieChart, Pie, Cell, Text, ResponsiveContainer,\r\n} from 'recharts';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport useWindowSize from \"../../../useWindowSize\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst data = [\r\n    { name: 'Normal', value: 480 },\r\n    { name: 'Acceptable', value: 480 },\r\n    { name: 'Critical', value: 40 },\r\n];\r\n\r\nconst COLORS = [\"gray\", \"#009933\", \"#990033\",];\r\n\r\nconst RADIAN = Math.PI / 180;\r\n\r\nconst renderCustomizedLabel = ({\r\n                                   cx, cy, midAngle, innerRadius, outerRadius, percent,\r\n                               }) => {\r\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n        <Text x={x} y={y} fill=\"white\" textAnchor=\"middle\" verticalAnchor=\"middle\">\r\n            {`${(percent * 100).toFixed(0)}%`}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport default function NightPhase(props){\r\n\r\n    const useStyles = makeStyles({\r\n        subTitle: {\r\n            backgroundColor: \"white !important\",\r\n            color: \"#ec6602 !important\",\r\n            borderRadius: props.borderRadius,\r\n        },\r\n        h2Style: {\r\n            margin: \"0\",\r\n            padding: \"10px\",\r\n        },\r\n        wrapper: {\r\n            width: props.width + \"%\",\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.wrapper}>\r\n                <Paper className={classes.subTitle} elevation={3}>\r\n                    {(props.fontWidth ?\r\n                        <h2 className={classes.h2Style}>\r\n                            Night Phase (12:59 - 06:00) - Limit Values 140/90 mmHg</h2>\r\n                        :<h3 className={classes.h2Style}>\r\n                            Night Phase (12:59 - 06:00) - Limit Values 140/90 mmHg</h3>)}\r\n                </Paper>\r\n                <ResponsiveContainer width=\"100%\" aspect={props.aspect || 1.5}>\r\n                    <PieChart>\r\n                        <Pie\r\n                            data={data}\r\n                            cx={props.cx || \"50%\"}\r\n                            cy=\"50%\"\r\n                            labelLine={false}\r\n                            label={renderCustomizedLabel}\r\n                            innerRadius=\"45%\"\r\n                            outerRadius=\"65%\"\r\n                            isAnimationActive={props.isAnimationActive}\r\n                            fill=\"#8884d8\"\r\n                            dataKey=\"value\"\r\n                        >\r\n                            {\r\n                                data.map((entry, index) =>\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                            }\r\n                        </Pie>\r\n                        <Pie data={data} dataKey=\"value\"\r\n                             cx={props.cx || \"50%\"}\r\n                             cy=\"50%\"\r\n                             innerRadius=\"65%\"\r\n                             outerRadius=\"65%\"\r\n                             fill=\"#8884d8\"\r\n                             isAnimationActive={props.isAnimationActive}\r\n                             labelLine={true}\r\n                             label={(entry) => entry.name}\r\n                        >\r\n                            {\r\n                                data.map((entry, index) =>\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                            }\r\n                        </Pie>\r\n                    </PieChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}","import React from \"react\";\r\nimport TotalTime from \"./totalTime\";\r\nimport DayPhase from \"./dayPhase\";\r\nimport NightPhase from \"./nightPhase\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport useReRender from \"../../../useReRender\";\r\n\r\nexport default function Diastole(props){\r\n\r\n    const useStyles = makeStyles({\r\n        title: {\r\n            backgroundColor: \"white !important\",\r\n            color: \"#009999 !important\",\r\n            borderRadius: props.borderRadius,\r\n        },\r\n        h1Style: {\r\n            marginTop: \"0\",\r\n            padding: \"10px\",\r\n        },\r\n        wrapper: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n\r\n    const reRender = useReRender()\r\n\r\n    const [trigger, setTrigger] = React.useState(true);\r\n\r\n    const update = (resizeTimer) => {\r\n        setTrigger(false)\r\n        clearTimeout(resizeTimer);\r\n        resizeTimer = setTimeout(function() {\r\n            setTrigger(true)\r\n        }, 250);\r\n    }\r\n\r\n    let resizeTimer;\r\n\r\n    React.useEffect(()=>{\r\n        update(resizeTimer)\r\n    }, [reRender]);\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const renderChart = () => {\r\n        if (trigger){\r\n            return (\r\n                <React.Fragment>\r\n                    <TotalTime borderRadius={props.borderRadius}\r\n                               cx={props.cx}\r\n                               aspect={props.aspect}\r\n                               isAnimationActive={props.isAnimationActive}\r\n                               fontWidth={props.fontWidth}\r\n                               width={props.width} />\r\n                    <DayPhase borderRadius={props.borderRadius}\r\n                              cx={props.cx}\r\n                              isAnimationActive={props.isAnimationActive}\r\n                              aspect={props.aspect}\r\n                              fontWidth={props.fontWidth} width={props.width}/>\r\n                    <NightPhase borderRadius={props.borderRadius}\r\n                                cx={props.cx}\r\n                                isAnimationActive={props.isAnimationActive}\r\n                                aspect={props.aspect}\r\n                                fontWidth={props.fontWidth} width={props.width}/>\r\n                </React.Fragment>\r\n            );\r\n        }else {\r\n            return(\r\n                <div className={classes.wrapper}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid xs={12}>\r\n                <Paper className={classes.title} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className={classes.h1Style}>Pie Graphic/Diastole</h1>\r\n                        :<h2 className={classes.h1Style}>Pie Graphic/Diastole</h2>)}\r\n                </Paper>\r\n            </Grid>\r\n            <Grid container justify=\"space-between\">\r\n                {renderChart()}\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React, {useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Systole from \"./systole/systole\";\r\nimport Diastole from \"./diastole/diastole\";\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-force-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-force-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-force-tab-${index}`,\r\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport default function PieGraphicVertical(props) {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const innerPanelPadding = 24;\r\n\r\n    const all = innerPanelPadding*2;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            width: '100%',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        tabs: {\r\n            borderRight: `1px solid ${theme.palette.divider}`,\r\n        },\r\n        panel: {\r\n            margin: \"auto\",\r\n            \"& > div\": {\r\n                padding: \"0 !important\",\r\n                paddingTop: innerPanelPadding + \"px !important\",\r\n            },\r\n            width: \"100%\",\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"on\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    aria-label=\"scrollable force tabs example\"\r\n                >\r\n                    <Tab label=\"Systole\" {...a11yProps(0)} />\r\n                    <Tab label=\"Diastole\" {...a11yProps(1)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel className={classes.panel} value={value} index={0}>\r\n                <Systole borderRadius={props.borderRadius}\r\n                         isAnimationActive={true}\r\n                         aspect={props.aspect}\r\n                         fontWidth={props.fontWidth} width={props.width}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={1}>\r\n                <Diastole borderRadius={props.borderRadius}\r\n                          isAnimationActive={true}\r\n                          aspect={props.aspect}\r\n                          fontWidth={props.fontWidth} width={props.width}/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    ComposedChart, Line, XAxis, YAxis, CartesianGrid,\r\n    Legend, Scatter, ResponsiveContainer, Tooltip,\r\n} from 'recharts';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport useReRender from \"../../useReRender\";\r\n\r\nconst data = [\r\n    { index: 10000, red: 1643, blue: 790 },\r\n    { index: 1666, red: 182, blue: 42 },\r\n    { index: 625, red: 56, blue: 11 },\r\n    // Calculation of line of best fit is not included in this demo\r\n    { index: 300, redLine: 0 },\r\n    { index: 10000, redLine: 1522 },\r\n    { index: 600, blueLine: 0 },\r\n    { index: 10000, blueLine: 678 },\r\n];\r\n\r\nexport default function Chart(props){\r\n    const useStyles = makeStyles({\r\n        title: {\r\n            backgroundColor: \"white !important\",\r\n            color: \"#009999 !important\",\r\n            borderRadius: props.borderRadius,\r\n        },\r\n        h1Style: {\r\n            marginTop: \"0\",\r\n            padding: \"10px\",\r\n        },\r\n        wrapper: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        },\r\n    });\r\n\r\n    const reRender = useReRender()\r\n\r\n    const [trigger, setTrigger] = React.useState(true);\r\n\r\n    const update = (resizeTimer) => {\r\n        setTrigger(false)\r\n        clearTimeout(resizeTimer);\r\n        resizeTimer = setTimeout(function() {\r\n            setTrigger(true)\r\n        }, 250);\r\n    }\r\n\r\n    let resizeTimer;\r\n\r\n    React.useEffect(()=>{\r\n        update(resizeTimer)\r\n    }, [reRender]);\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const renderChart = () => {\r\n        if (trigger){\r\n            return (\r\n                <React.Fragment>\r\n                    <ResponsiveContainer width=\"100%\" aspect={props.aspect}>\r\n                        <ComposedChart\r\n                            data={data}\r\n                            margin={{\r\n                                top: 20, right: 80, bottom: 20, left: 20,\r\n                            }}\r\n                        >\r\n                            <CartesianGrid stroke=\"gray\" strokeDasharray=\"3 3\"/>\r\n                            <Tooltip/>\r\n                            <Legend />\r\n                            <XAxis unit=\"mmHg\" dataKey=\"index\" type=\"number\" label={{ value: 'Systole', position: 'insideBottomRight', offset: 0 }} />\r\n                            <YAxis tickCount=\"10\" type=\"number\" label={{ value: 'Diastole', angle: -90, position: 'insideLeft' }} />\r\n                            <Scatter name=\"Night Phase\" dataKey=\"red\" fill=\"#009933\" />\r\n                            <Scatter name=\"Day Phase\" dataKey=\"blue\" fill=\"#990033\" />\r\n                            <Line name=\"Day Phase\" dataKey=\"blueLine\" stroke=\"#990033\" dot={false} activeDot={false} legendType=\"none\" />\r\n                            <Line dataKey=\"redLine\" stroke=\"#009933\" dot={false} activeDot={false} legendType=\"none\" />\r\n                        </ComposedChart>\r\n                    </ResponsiveContainer>\r\n                </React.Fragment>\r\n            );\r\n        }else {\r\n            return(\r\n                <div className={classes.wrapper}>\r\n                    <CircularProgress/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid xs={12}>\r\n                <Paper className={classes.title} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className={classes.h1Style}>Correlation</h1>\r\n                        :<h2 className={classes.h1Style}>Correlation</h2>)}\r\n                </Paper>\r\n                {renderChart()}\r\n            </Grid>\r\n\r\n        </React.Fragment>\r\n    );\r\n}","import React from \"react\";\r\nimport Chart from \"./chart\";\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nexport default function Correlation(props){\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Grid container spacing={1}>\r\n                <Chart fontWidth={props.fontWidth}\r\n                       borderRadius={props.borderRadius}\r\n                       aspect={props.aspect}/>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Saved() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n                Save\r\n            </Button>\r\n            <Snackbar anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }} open={open} autoHideDuration={2000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    New Findings Saved.\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Saved from \"./saved\";\r\n\r\n\r\n\r\n\r\nexport default function Findings(props){\r\n\r\n    const useStyles = makeStyles({\r\n        field: {\r\n            width: \"90%\",\r\n        },\r\n        title: {\r\n            backgroundColor: \"white !important\",\r\n            color: \"#009999 !important\",\r\n            margin: \"0\",\r\n            textAlign: \"left\",\r\n            borderRadius: props.borderRadius,\r\n        },\r\n        h1Style: {\r\n            marginTop: \"0\",\r\n            padding: \"10px\",\r\n        },\r\n        wrapper: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n        },\r\n        grid: {\r\n            textAlign: \"center\",\r\n        }\r\n    });\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Grid container spacing={1}>\r\n            <div className={classes.wrapper}>\r\n                <Paper className={classes.title} elevation={3}>\r\n                    {(props.fontWidth ? <h1 className={classes.h1Style}>Findings</h1>\r\n                        :<h2 className={classes.h1Style}>Findings</h2>)}\r\n                </Paper>\r\n                <TextField\r\n                    className={classes.field}\r\n                    id=\"standard-textarea\"\r\n                    label=\"Findings\"\r\n                    placeholder=\"\"\r\n                    multiline\r\n                />\r\n            </div>\r\n            <Grid className={classes.grid} item xs={12}>\r\n                <Saved/>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { mdiArrowLeftCircle } from '@mdi/js';\r\nimport Icon from '@mdi/react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function Bar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton href=\"#/\"\r\n                                edge=\"start\"\r\n                                className={classes.menuButton}\r\n                                color=\"inherit\" aria-label=\"menu\">\r\n                        <Icon path={mdiArrowLeftCircle}\r\n                              title=\"Back\"\r\n                              size={1}\r\n                              color=\"white\"\r\n                              />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport GraphicalView from \"./graphicalView\";\r\nimport TableCustom from \"./table\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport default function SingleValueHorizontal(props) {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const innerPanelPadding = 24;\r\n    const verticalTabsWidth = \"160px\";\r\n\r\n    const all = innerPanelPadding*2;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper,\r\n            display: 'flex',\r\n            height: 224,\r\n        },\r\n        tabs: {\r\n            borderRight: `1px solid ${theme.palette.divider}`,\r\n            maxWidth: verticalTabsWidth + \"%\",\r\n        },\r\n        panel: {\r\n            margin: \"auto\",\r\n            \"& > div\": {\r\n                padding: innerPanelPadding,\r\n            },\r\n            width: `calc(100% - ${all}px - ${verticalTabsWidth} )`,\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"PieGraphicsVertical tabs example\"\r\n                className={classes.tabs}\r\n            >\r\n                <Tab label=\"Graphical View\" {...a11yProps(0)} />\r\n                <Tab label=\"Table\" {...a11yProps(1)} />\r\n            </Tabs>\r\n            <TabPanel className={classes.panel} value={value} index={0}>\r\n                <GraphicalView borderRadius={props.borderRadius}\r\n                               fontWidth={props.fontWidth} aspect={props.aspect}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={1}>\r\n                <TableCustom borderRadius={props.borderRadius} fontWidth={props.fontWidth}/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport GraphicalView from \"./graphicalView\";\r\nimport TableCustom from \"./table\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport default function HourlyAveragesHorizontal(props) {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const innerPanelPadding = 24;\r\n    const verticalTabsWidth = \"160px\";\r\n\r\n    const all = innerPanelPadding*2;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper,\r\n            display: 'flex',\r\n            height: 224,\r\n        },\r\n        tabs: {\r\n            borderRight: `1px solid ${theme.palette.divider}`,\r\n            maxWidth: verticalTabsWidth + \"%\",\r\n        },\r\n        panel: {\r\n            margin: \"auto\",\r\n            \"& > div\": {\r\n                padding: innerPanelPadding,\r\n            },\r\n            width: `calc(100% - ${all}px - ${verticalTabsWidth} )`,\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"PieGraphicsVertical tabs example\"\r\n                className={classes.tabs}\r\n            >\r\n                <Tab label=\"Graphical View\" {...a11yProps(0)} />\r\n                <Tab label=\"Table\" {...a11yProps(1)} />\r\n            </Tabs>\r\n            <TabPanel className={classes.panel} value={value} index={0}>\r\n                <GraphicalView borderRadius={props.borderRadius}\r\n                               fontWidth={props.fontWidth} aspect={props.aspect}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={1}>\r\n                <TableCustom borderRadius={props.borderRadius}\r\n                             fontWidth={props.fontWidth}/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport TotalTime from \"./totalTime\";\r\nimport DayPhase from \"./dayPhase\";\r\nimport NightPhase from \"./nightPhase\";\r\nimport useWindowSize from \"../../useWindowSize\";\r\nimport GraphicalView from \"../hourlyAverages/graphicalView\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nexport default function HistogramHorizontal(props) {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const innerPanelPadding = 24;\r\n    const verticalTabsWidth = \"160px\";\r\n\r\n    const all = innerPanelPadding*2;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper,\r\n            display: 'flex',\r\n            height: 224,\r\n        },\r\n        tabs: {\r\n            borderRight: `1px solid ${theme.palette.divider}`,\r\n            maxWidth: verticalTabsWidth + \"%\",\r\n        },\r\n        panel: {\r\n            margin: \"auto\",\r\n            \"& > div\": {\r\n                padding: innerPanelPadding,\r\n            },\r\n            width: `calc(100% - ${all}px - ${verticalTabsWidth} )`,\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"Vertical tabs example\"\r\n                className={classes.tabs}\r\n            >\r\n                <Tab label=\"Total Time\" {...a11yProps(0)} />\r\n                <Tab label=\"Day Phase\" {...a11yProps(1)} />\r\n                <Tab label=\"Night Phase\" {...a11yProps(2)} />\r\n            </Tabs>\r\n            <TabPanel className={classes.panel} value={value} index={0}>\r\n                <TotalTime borderRadius={props.borderRadius}\r\n                           histogramWidth={props.histogramWidth}\r\n                           fontWidth={props.fontWidth} aspect={props.aspect}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={1}>\r\n                <DayPhase borderRadius={props.borderRadius}\r\n                          histogramWidth={props.histogramWidth}\r\n                          fontWidth={props.fontWidth} aspect={props.aspect}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={2}>\r\n                <NightPhase borderRadius={props.borderRadius}\r\n                            histogramWidth={props.histogramWidth}\r\n                            fontWidth={props.fontWidth} aspect={props.aspect}/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Systole from \"./systole/systole\";\r\nimport Diastole from \"./diastole/diastole\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\n\r\nexport default function PieGraphicHorizontal(props) {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const innerPanelPadding = 24;\r\n    const verticalTabsWidth = \"160px\";\r\n\r\n    const all = innerPanelPadding*2;\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.paper,\r\n            display: 'flex',\r\n            height: 224,\r\n        },\r\n        tabs: {\r\n            borderRight: `1px solid ${theme.palette.divider}`,\r\n            maxWidth: verticalTabsWidth + \"%\",\r\n        },\r\n        panel: {\r\n            margin: \"auto\",\r\n            \"& > div\": {\r\n                padding: innerPanelPadding,\r\n            },\r\n            width: `calc(100% - ${all}px - ${verticalTabsWidth} )`,\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"Vertical tabs example\"\r\n                className={classes.tabs}\r\n            >\r\n                <Tab label=\"Systole\" {...a11yProps(0)} />\r\n                <Tab label=\"Diastole\" {...a11yProps(1)} />\r\n            </Tabs>\r\n            <TabPanel className={classes.panel} value={value} index={0}>\r\n                <Systole borderRadius={props.borderRadius}\r\n                         isAnimationActive={true}\r\n                         aspect={props.aspect}\r\n                         fontWidth={props.fontWidth} width={props.width}/>\r\n            </TabPanel>\r\n            <TabPanel className={classes.panel} value={value} index={1}>\r\n                <Diastole borderRadius={props.borderRadius}\r\n                          isAnimationActive={true}\r\n                          aspect={props.aspect}\r\n                          fontWidth={props.fontWidth} width={props.width}/>\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport OverviewVertical from \"./overview/overviewVertical\";\r\nimport OverviewHorizontal from \"./overview/overviewHorizontal\";\r\nimport SingleValueVertical from \"./singleValue/singleValueVertical\";\r\nimport HourlyAveragesVertical from \"./hourlyAverages/hourlyAveragesVertical\";\r\nimport HistogramVertical from \"./histogram/histogramVertical\";\r\nimport PieGraphicsVertical from \"./pieGraphic/pieGraphicVertical\";\r\nimport Correlation from \"./correlation/correlation\";\r\nimport Findings from \"./findings/findings\";\r\nimport Bar from \"./bar\";\r\nimport useMedia from \"../useMedia\";\r\nimport SingleValueHorizontal from \"./singleValue/singleValueHorizontal\";\r\nimport HourlyAveragesHorizontal from \"./hourlyAverages/hourlyAveragesHorizontal\";\r\nimport HistogramHorizontal from \"./histogram/histogramHorizontal\";\r\nimport PieGraphicsHorizontal from \"./pieGraphic/pieGraphicHorizontal\";\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-force-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-force-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-force-tab-${index}`,\r\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction Detail(props) {\r\n    const [value, setValue] = React.useState(0);\r\n    const outerPanelPadding = 10;\r\n    let aspect;\r\n    let pieGraphicsAspect;\r\n    let width;\r\n    let correlationAspect;\r\n    let fontWidth;\r\n    let borderRadius;\r\n    let histogramWidth;\r\n    let breakPoint = useMedia();\r\n\r\n    if (breakPoint.name === \"xs\"){\r\n        aspect = 1;\r\n        width = 100;\r\n        pieGraphicsAspect = 1.5;\r\n        correlationAspect = 1;\r\n        fontWidth = false;\r\n        borderRadius = 0;\r\n        histogramWidth = \"95%\"\r\n    }else if (breakPoint.name === \"sm\"){\r\n        aspect = 1;\r\n        width = 100;\r\n        pieGraphicsAspect = 1.5;\r\n        correlationAspect = 1.8;\r\n        fontWidth = true;\r\n        borderRadius = 4;\r\n        histogramWidth = \"95%\"\r\n    }else if (breakPoint.name === \"md\"){\r\n        aspect = 2;\r\n        width = 49;\r\n        correlationAspect = 2;\r\n        pieGraphicsAspect = 2;\r\n        fontWidth = true;\r\n        borderRadius = 4;\r\n        histogramWidth = \"100%\"\r\n    }else if (breakPoint.name === \"lg\"){\r\n        aspect = 3;\r\n        width = 49;\r\n        correlationAspect = 2;\r\n        pieGraphicsAspect = 2.5;\r\n        fontWidth = true;\r\n        borderRadius = 4;\r\n        histogramWidth = \"100%\"\r\n    }else if (breakPoint.name === \"xl\"){\r\n        aspect = 5;\r\n        width = 32;\r\n        pieGraphicsAspect = 2.5;\r\n        correlationAspect = 2.5;\r\n        fontWidth = true;\r\n        borderRadius = 4;\r\n        histogramWidth = \"100%\"\r\n    }\r\n\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            width: '100%',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        panel: {\r\n            \"& > div\": {\r\n                padding: \"0 !important\",\r\n                paddingTop: outerPanelPadding + \"px !important\",\r\n            }\r\n        }\r\n    }));\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Bar/>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"on\"\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        aria-label=\"scrollable force tabs example\"\r\n                    >\r\n                        <Tab label=\"Overview\" {...a11yProps(0)} />\r\n                        <Tab label=\"Single Values\" {...a11yProps(1)} />\r\n                        <Tab label=\"Hourly Averages\" {...a11yProps(2)} />\r\n                        <Tab label=\"Histogram\" {...a11yProps(3)} />\r\n                        <Tab label=\"Pie Graphic\" {...a11yProps(4)} />\r\n                        <Tab label=\"Correlation\" {...a11yProps(5)} />\r\n                        <Tab label=\"Findings\" {...a11yProps(6)} />\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel className={classes.panel} value={value} index={0}>\r\n                    {(breakPoint.value >= 1 ?\r\n                        <OverviewHorizontal fontWidth={fontWidth} borderRadius={borderRadius}/>\r\n                        : <OverviewVertical fontWidth={fontWidth} borderRadius={borderRadius}/>)}\r\n                </TabPanel>\r\n                <TabPanel className={classes.panel} value={value} index={1}>\r\n                    {(breakPoint.value >= 1 ?\r\n                        <SingleValueHorizontal fontWidth={fontWidth}\r\n                                               aspect={aspect}\r\n                                               borderRadius={borderRadius}\r\n                                               outerPanelPadding={outerPanelPadding}/>\r\n                        : <SingleValueVertical fontWidth={fontWidth}\r\n                                               borderRadius={borderRadius}\r\n                                               aspect={aspect}\r\n                                               outerPanelPadding={outerPanelPadding}/>)}\r\n                </TabPanel>\r\n                <TabPanel className={classes.panel} value={value} index={2}>\r\n                    {(breakPoint.value >= 1 ?\r\n                        <HourlyAveragesHorizontal fontWidth={fontWidth}\r\n                                                  aspect={aspect}\r\n                                                  borderRadius={borderRadius}\r\n                                                  outerPanelPadding={outerPanelPadding}/>\r\n                        : <HourlyAveragesVertical fontWidth={fontWidth}\r\n                                                  aspect={aspect}\r\n                                                  borderRadius={borderRadius}\r\n                                                  outerPanelPadding={outerPanelPadding}/>)}\r\n                </TabPanel>\r\n                <TabPanel className={classes.panel} value={value} index={3}>\r\n                    {(breakPoint.value >= 1 ?\r\n                        <HistogramHorizontal fontWidth={fontWidth}\r\n                                           aspect={aspect}\r\n                                           borderRadius={borderRadius}\r\n                                           histogramWidth={histogramWidth}/>\r\n                        :<HistogramVertical fontWidth={fontWidth}\r\n                                              aspect={aspect}\r\n                                              borderRadius={borderRadius}\r\n                                              histogramWidth={histogramWidth}/>)}\r\n                </TabPanel>\r\n                <TabPanel className={classes.panel} value={value} index={4}>\r\n                    {(breakPoint.value >= 1 ?\r\n                        <PieGraphicsHorizontal fontWidth={fontWidth}\r\n                                                width={width}\r\n                                               aspect={pieGraphicsAspect}\r\n                                               borderRadius={borderRadius}/>\r\n                        : <PieGraphicsVertical fontWidth={fontWidth}\r\n                                                 width={width}\r\n                                               borderRadius={borderRadius}\r\n                                               aspect={pieGraphicsAspect}/>)}\r\n                </TabPanel>\r\n                <TabPanel value={value} index={5}>\r\n                    <Correlation fontWidth={fontWidth}\r\n                                 borderRadius={borderRadius}\r\n                                 aspect={correlationAspect}/>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={6}>\r\n                    <Findings borderRadius={borderRadius}\r\n                              fontWidth={fontWidth}/>\r\n                </TabPanel>\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Detail;","import {useTheme} from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nexport default function useMedia() {\r\n\r\n    let breakPoint = 0;\r\n    let breakPointName = \"xs\";\r\n\r\n    const theme = useTheme();\r\n    const xs = useMediaQuery(theme.breakpoints.up('xs'));\r\n    const sm = useMediaQuery(theme.breakpoints.up('sm'));\r\n    const md = useMediaQuery(theme.breakpoints.up('md'));\r\n    const lg = useMediaQuery(theme.breakpoints.up('lg'));\r\n    const xl = useMediaQuery(theme.breakpoints.up('xl'));\r\n\r\n    if (xs){\r\n        breakPoint = 0;\r\n        breakPointName = \"xs\";\r\n        if (sm){\r\n            breakPoint = 1;\r\n            breakPointName = \"sm\";\r\n            if (md){\r\n                breakPoint = 2;\r\n                breakPointName = \"md\";\r\n                if (lg){\r\n                    breakPoint = 3;\r\n                    breakPointName = \"lg\";\r\n                    if (xl){\r\n                        breakPoint = 4;\r\n                        breakPointName = \"xl\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return { name: breakPointName, value: breakPoint };\r\n}","import './App.css';\r\nimport React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {Switch, Route, HashRouter } from \"react-router-dom\";\r\nimport \"./components/styles.css\";\r\nimport Detail from \"./components/detail/detail\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <HashRouter>\r\n            <Switch>\r\n                <React.Fragment>\r\n                    <CssBaseline />\r\n                    <Route exact path=\"/\">\r\n                        <Detail/>\r\n                    </Route>\r\n                </React.Fragment>\r\n            </Switch>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}